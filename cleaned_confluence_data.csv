Article ID,Title,Content,Cleaned_Content,Content_Chunks
3708780588,Product Support - Home,"#EAE6FF

Hey there, welcome to the coolest support crew around - Plivo Support! We're
like Batman, but instead of fighting crime, we're here to fight any issues you
might face while using our platform. Our team of superheroes (minus the capes)
are available 24/7 to assist you with anything and everything related to
Plivo. Whether you need help setting up your account, troubleshooting a
problem, or just want to chat about your favourite superhero movie, we've got
you covered. So sit back, relax, and let us handle the heavy lifting. We
promise to be your sidekick for success!

* * *

#  Meet Our Team

## **CUSTOMER SUPPORT CHAMPIONS**

**Shiek Furqaan******| **Vedik Ramesh******  
---|---  
**Abhishek******| **Eric Manning******  
**Ankita******| **Yukthi Mathad******  
**Aravind S******| **Saksham Saraf******  
  
## **DEVELOPER SUPPORT CHAMPIONS**

**Shahbaz Khan******| **Manuja Ezhava******| **Aditi H******  
---|---|---  
**Kiran Kumar******| **Subhodeep Sen******| **Shubham Singh******  
**Mohammed Jazeer******| **Ankita S******| **Steven Decker******  
**Kanneganti Niteesh******| **Srinonti Biswas******| **Smruthi D**  
**Sabah Zakir******| **Isaac Glynn******|  -  
  
## **THE QUALITY TEAM**

**Deblina******| **Sudeep Suresh******| **Swadhin Paul******  
---|---|---  
  
## **THE MANAGEMENT TEAM**

####  \- **Head of Support** (US)

\- **Head of Support** (International)

#####  **\- Senior Manager - Product Support (QA)**

#####  \- **Team Lead (QA)**

#####  **Team Lead (PST)**

* * *

#  **DOCUMENTATIONS:**

:outbox_tray:1f4e4üì§#C0B6F2

#### Messaging

:desktop:1f5a5üñ•Ô∏è#C0B6F2

#### Account Management

:page_with_curl:1f4c3üìÉ#C0B6F2

#### Billing and Payments

:calling:1f4f2üì≤#C0B6F2

#### Phone Numbers

:telephone_receiver:1f4deüìû#C0B6F2

Voice API

:ZT:9fe63e8d-4fe0-42c5-a217-5de00f5c02f2:ZT:#C0B6F2

Zentrunk

:info:atlassian-info#E3FCEF

#### New Hire Training & Onboarding

* * *

**Zendesk**

******OpenSearch**

******RYUK**

******Salesforce**

******Google Drive**

******Mailgun******

**TCR Portal******

**Quick Sight (via AWS)******

**DB Logs******

* * *

  * We are committed to providing exceptional support in all categories by implementing a 100% Service Level Agreement (SLA).

  * Our goal is to resolve all customer issues within the agreed time frame.

  * We strive for a quality score of 98% or higher on ticket audits.

  * We continuously review and improve our processes to ensure high-quality support.

  * To gauge customer satisfaction, we target a CSAT score of 98% or higher for Growth, Mid-market, Enterprise, and Strategic customers.

  * Our ultimate aim is to deliver exceptional customer service and maintain high-quality support operations.

G2 Reviews

* * *

https://www.plivo.com/support-plans/

","hey there, welcome coolest support crew around - plivo support! we're like batman, instead fighting crime, we're fight issues might face using platform. team superheroes (minus capes) available 24/7 assist anything everything related plivo. whether need help setting account, troubleshooting problem, want chat favourite superhero movie, we've got covered. sit back, relax, let us handle heavy lifting. promise sidekick success! * * * # meet team **customer support champions** **shiek furqaan******| **vedik ramesh****** ---|--- **abhishek******| **eric manning****** **ankita******| **yukthi mathad****** **aravind s******| **saksham saraf****** **developer support champions** **shahbaz khan******| **manuja ezhava******| **aditi h****** ---|---|--- **kiran kumar******| **subhodeep sen******| **shubham singh****** **mohammed jazeer******| **ankita s******| **steven decker****** **kanneganti niteesh******| **srinonti biswas******| **smruthi d** **sabah zakir******| **isaac glynn******| - **the quality team** **deblina******| **sudeep suresh******| **swadhin paul****** ---|---|--- **the management team** \- **head support** (us) \- **head support** (international) **\- senior manager - product support (qa)** \- **team lead (qa)** **team lead (pst)** * * * # **documentations:** :outbox_tray:1f4e4üì§ messaging :desktop:1f5a5üñ•Ô∏è account management :page_with_curl:1f4c3üìÉ billing payments :calling:1f4f2üì≤ phone numbers :telephone_receiver:1f4deüìû voice api :zt:9fe63e8d-4fe0-42c5-a217-5de00f5c02f2:zt: zentrunk :info:atlassian-info new hire training & onboarding * * * **zendesk** ******opensearch** ******ryuk** ******salesforce** ******google drive** ******mailgun****** **tcr portal****** **quick sight (via aws)****** **db logs****** * * * * committed providing exceptional support categories implementing 100% service level agreement (sla). * goal resolve customer issues within agreed time frame. * strive quality score 98% higher ticket audits. * continuously review improve processes ensure high-quality support. * gauge customer satisfaction, target csat score 98% higher growth, mid-market, enterprise, strategic customers. * ultimate aim deliver exceptional customer service maintain high-quality support operations. g2 reviews * * * https://www.plivo.com/support-plans/","hey there, welcome coolest support crew around - plivo support! we're like batman, instead fighting crime, we're fight issues might face using platform. team superheroes (minus capes) available 24/7 assist anything everything related plivo. whether need help setting account, troubleshooting problem, want chat favourite superhero movie, we've got covered. sit back, relax, let us handle heavy lifting. promise sidekick success!"
3708780588,Product Support - Home,"#EAE6FF

Hey there, welcome to the coolest support crew around - Plivo Support! We're
like Batman, but instead of fighting crime, we're here to fight any issues you
might face while using our platform. Our team of superheroes (minus the capes)
are available 24/7 to assist you with anything and everything related to
Plivo. Whether you need help setting up your account, troubleshooting a
problem, or just want to chat about your favourite superhero movie, we've got
you covered. So sit back, relax, and let us handle the heavy lifting. We
promise to be your sidekick for success!

* * *

#  Meet Our Team

## **CUSTOMER SUPPORT CHAMPIONS**

**Shiek Furqaan******| **Vedik Ramesh******  
---|---  
**Abhishek******| **Eric Manning******  
**Ankita******| **Yukthi Mathad******  
**Aravind S******| **Saksham Saraf******  
  
## **DEVELOPER SUPPORT CHAMPIONS**

**Shahbaz Khan******| **Manuja Ezhava******| **Aditi H******  
---|---|---  
**Kiran Kumar******| **Subhodeep Sen******| **Shubham Singh******  
**Mohammed Jazeer******| **Ankita S******| **Steven Decker******  
**Kanneganti Niteesh******| **Srinonti Biswas******| **Smruthi D**  
**Sabah Zakir******| **Isaac Glynn******|  -  
  
## **THE QUALITY TEAM**

**Deblina******| **Sudeep Suresh******| **Swadhin Paul******  
---|---|---  
  
## **THE MANAGEMENT TEAM**

####  \- **Head of Support** (US)

\- **Head of Support** (International)

#####  **\- Senior Manager - Product Support (QA)**

#####  \- **Team Lead (QA)**

#####  **Team Lead (PST)**

* * *

#  **DOCUMENTATIONS:**

:outbox_tray:1f4e4üì§#C0B6F2

#### Messaging

:desktop:1f5a5üñ•Ô∏è#C0B6F2

#### Account Management

:page_with_curl:1f4c3üìÉ#C0B6F2

#### Billing and Payments

:calling:1f4f2üì≤#C0B6F2

#### Phone Numbers

:telephone_receiver:1f4deüìû#C0B6F2

Voice API

:ZT:9fe63e8d-4fe0-42c5-a217-5de00f5c02f2:ZT:#C0B6F2

Zentrunk

:info:atlassian-info#E3FCEF

#### New Hire Training & Onboarding

* * *

**Zendesk**

******OpenSearch**

******RYUK**

******Salesforce**

******Google Drive**

******Mailgun******

**TCR Portal******

**Quick Sight (via AWS)******

**DB Logs******

* * *

  * We are committed to providing exceptional support in all categories by implementing a 100% Service Level Agreement (SLA).

  * Our goal is to resolve all customer issues within the agreed time frame.

  * We strive for a quality score of 98% or higher on ticket audits.

  * We continuously review and improve our processes to ensure high-quality support.

  * To gauge customer satisfaction, we target a CSAT score of 98% or higher for Growth, Mid-market, Enterprise, and Strategic customers.

  * Our ultimate aim is to deliver exceptional customer service and maintain high-quality support operations.

G2 Reviews

* * *

https://www.plivo.com/support-plans/

","hey there, welcome coolest support crew around - plivo support! we're like batman, instead fighting crime, we're fight issues might face using platform. team superheroes (minus capes) available 24/7 assist anything everything related plivo. whether need help setting account, troubleshooting problem, want chat favourite superhero movie, we've got covered. sit back, relax, let us handle heavy lifting. promise sidekick success! * * * # meet team **customer support champions** **shiek furqaan******| **vedik ramesh****** ---|--- **abhishek******| **eric manning****** **ankita******| **yukthi mathad****** **aravind s******| **saksham saraf****** **developer support champions** **shahbaz khan******| **manuja ezhava******| **aditi h****** ---|---|--- **kiran kumar******| **subhodeep sen******| **shubham singh****** **mohammed jazeer******| **ankita s******| **steven decker****** **kanneganti niteesh******| **srinonti biswas******| **smruthi d** **sabah zakir******| **isaac glynn******| - **the quality team** **deblina******| **sudeep suresh******| **swadhin paul****** ---|---|--- **the management team** \- **head support** (us) \- **head support** (international) **\- senior manager - product support (qa)** \- **team lead (qa)** **team lead (pst)** * * * # **documentations:** :outbox_tray:1f4e4üì§ messaging :desktop:1f5a5üñ•Ô∏è account management :page_with_curl:1f4c3üìÉ billing payments :calling:1f4f2üì≤ phone numbers :telephone_receiver:1f4deüìû voice api :zt:9fe63e8d-4fe0-42c5-a217-5de00f5c02f2:zt: zentrunk :info:atlassian-info new hire training & onboarding * * * **zendesk** ******opensearch** ******ryuk** ******salesforce** ******google drive** ******mailgun****** **tcr portal****** **quick sight (via aws)****** **db logs****** * * * * committed providing exceptional support categories implementing 100% service level agreement (sla). * goal resolve customer issues within agreed time frame. * strive quality score 98% higher ticket audits. * continuously review improve processes ensure high-quality support. * gauge customer satisfaction, target csat score 98% higher growth, mid-market, enterprise, strategic customers. * ultimate aim deliver exceptional customer service maintain high-quality support operations. g2 reviews * * * https://www.plivo.com/support-plans/",* * * # meet team **customer support champions** **shiek furqaan******| **vedik ramesh****** ---|--- **abhishek******| **eric manning****** **ankita******| **yukthi mathad****** **aravind s******| **saksham saraf****** **developer support champions** **shahbaz khan******| **manuja ezhava******| **aditi h****** ---|---|--- **kiran kumar******| **subhodeep sen******| **shubham singh****** **mohammed jazeer******| **ankita s******| **steven decker****** **kanneganti niteesh******| **srinonti biswas******| **smruthi d** **sabah zakir******| **isaac glynn******| - **the quality team** **deblina******| **sudeep suresh******| **swadhin paul****** ---|---|--- **the management team** \- **head support** (us) \- **head support** (international) **\- senior manager - product support (qa)** \- **team lead (qa)** **team lead (pst)** * * * # **documentations:** :outbox_tray:1f4e4üì§ messaging :desktop:1f5a5üñ•Ô∏è account management :page_with_curl:1f4c3üìÉ billing payments :calling:1f4f2üì≤ phone numbers :telephone_receiver:1f4deüìû voice api :zt:9fe63e8d-4fe0-42c5-a217-5de00f5c02f2:zt: zentrunk :info:atlassian-info new hire training & onboarding * * * **zendesk** ******opensearch** ******ryuk** ******salesforce** ******google drive** ******mailgun****** **tcr portal****** **quick sight (via aws)****** **db logs****** * * * * committed providing exceptional support categories implementing 100% service level agreement (sla).
3708780588,Product Support - Home,"#EAE6FF

Hey there, welcome to the coolest support crew around - Plivo Support! We're
like Batman, but instead of fighting crime, we're here to fight any issues you
might face while using our platform. Our team of superheroes (minus the capes)
are available 24/7 to assist you with anything and everything related to
Plivo. Whether you need help setting up your account, troubleshooting a
problem, or just want to chat about your favourite superhero movie, we've got
you covered. So sit back, relax, and let us handle the heavy lifting. We
promise to be your sidekick for success!

* * *

#  Meet Our Team

## **CUSTOMER SUPPORT CHAMPIONS**

**Shiek Furqaan******| **Vedik Ramesh******  
---|---  
**Abhishek******| **Eric Manning******  
**Ankita******| **Yukthi Mathad******  
**Aravind S******| **Saksham Saraf******  
  
## **DEVELOPER SUPPORT CHAMPIONS**

**Shahbaz Khan******| **Manuja Ezhava******| **Aditi H******  
---|---|---  
**Kiran Kumar******| **Subhodeep Sen******| **Shubham Singh******  
**Mohammed Jazeer******| **Ankita S******| **Steven Decker******  
**Kanneganti Niteesh******| **Srinonti Biswas******| **Smruthi D**  
**Sabah Zakir******| **Isaac Glynn******|  -  
  
## **THE QUALITY TEAM**

**Deblina******| **Sudeep Suresh******| **Swadhin Paul******  
---|---|---  
  
## **THE MANAGEMENT TEAM**

####  \- **Head of Support** (US)

\- **Head of Support** (International)

#####  **\- Senior Manager - Product Support (QA)**

#####  \- **Team Lead (QA)**

#####  **Team Lead (PST)**

* * *

#  **DOCUMENTATIONS:**

:outbox_tray:1f4e4üì§#C0B6F2

#### Messaging

:desktop:1f5a5üñ•Ô∏è#C0B6F2

#### Account Management

:page_with_curl:1f4c3üìÉ#C0B6F2

#### Billing and Payments

:calling:1f4f2üì≤#C0B6F2

#### Phone Numbers

:telephone_receiver:1f4deüìû#C0B6F2

Voice API

:ZT:9fe63e8d-4fe0-42c5-a217-5de00f5c02f2:ZT:#C0B6F2

Zentrunk

:info:atlassian-info#E3FCEF

#### New Hire Training & Onboarding

* * *

**Zendesk**

******OpenSearch**

******RYUK**

******Salesforce**

******Google Drive**

******Mailgun******

**TCR Portal******

**Quick Sight (via AWS)******

**DB Logs******

* * *

  * We are committed to providing exceptional support in all categories by implementing a 100% Service Level Agreement (SLA).

  * Our goal is to resolve all customer issues within the agreed time frame.

  * We strive for a quality score of 98% or higher on ticket audits.

  * We continuously review and improve our processes to ensure high-quality support.

  * To gauge customer satisfaction, we target a CSAT score of 98% or higher for Growth, Mid-market, Enterprise, and Strategic customers.

  * Our ultimate aim is to deliver exceptional customer service and maintain high-quality support operations.

G2 Reviews

* * *

https://www.plivo.com/support-plans/

","hey there, welcome coolest support crew around - plivo support! we're like batman, instead fighting crime, we're fight issues might face using platform. team superheroes (minus capes) available 24/7 assist anything everything related plivo. whether need help setting account, troubleshooting problem, want chat favourite superhero movie, we've got covered. sit back, relax, let us handle heavy lifting. promise sidekick success! * * * # meet team **customer support champions** **shiek furqaan******| **vedik ramesh****** ---|--- **abhishek******| **eric manning****** **ankita******| **yukthi mathad****** **aravind s******| **saksham saraf****** **developer support champions** **shahbaz khan******| **manuja ezhava******| **aditi h****** ---|---|--- **kiran kumar******| **subhodeep sen******| **shubham singh****** **mohammed jazeer******| **ankita s******| **steven decker****** **kanneganti niteesh******| **srinonti biswas******| **smruthi d** **sabah zakir******| **isaac glynn******| - **the quality team** **deblina******| **sudeep suresh******| **swadhin paul****** ---|---|--- **the management team** \- **head support** (us) \- **head support** (international) **\- senior manager - product support (qa)** \- **team lead (qa)** **team lead (pst)** * * * # **documentations:** :outbox_tray:1f4e4üì§ messaging :desktop:1f5a5üñ•Ô∏è account management :page_with_curl:1f4c3üìÉ billing payments :calling:1f4f2üì≤ phone numbers :telephone_receiver:1f4deüìû voice api :zt:9fe63e8d-4fe0-42c5-a217-5de00f5c02f2:zt: zentrunk :info:atlassian-info new hire training & onboarding * * * **zendesk** ******opensearch** ******ryuk** ******salesforce** ******google drive** ******mailgun****** **tcr portal****** **quick sight (via aws)****** **db logs****** * * * * committed providing exceptional support categories implementing 100% service level agreement (sla). * goal resolve customer issues within agreed time frame. * strive quality score 98% higher ticket audits. * continuously review improve processes ensure high-quality support. * gauge customer satisfaction, target csat score 98% higher growth, mid-market, enterprise, strategic customers. * ultimate aim deliver exceptional customer service maintain high-quality support operations. g2 reviews * * * https://www.plivo.com/support-plans/","* goal resolve customer issues within agreed time frame. * strive quality score 98% higher ticket audits. * continuously review improve processes ensure high-quality support. * gauge customer satisfaction, target csat score 98% higher growth, mid-market, enterprise, strategic customers. * ultimate aim deliver exceptional customer service maintain high-quality support operations. g2 reviews * * * https://www.plivo.com/support-plans/"
3711140012,Account Breached/Compromised Process,"Support receives queries where the customers report that their accounts are
breached.  
  
**Below are the two different types of scenarios:**

  1. **SMS Pumping Issue**

  2. **Account Compromised**  

**How to understand which type of issue is it?**

  1. **In the case of SMS pumping, there is typically a sudden increase in SMS traffic, particularly OTP (One-Time Password) or ARN (Authorization Code) traffic. Despite the increase in volume, the traffic profile remains consistent, with the same content being sent repeatedly.**

  2. **On the other hand, in instances of compromised authentication IDs or tokens, random traffic starts to appear. This traffic is not consistent and may vary in content.**

**Checklist**

  * We should pull out the MDRs / CDRs for the mentioned period (the timespan of the breach).

  * Analyze the traffic triggered from the account by viewing the message content.

  * If the traffic triggered is in line with their usual message content, then it is the issue of SMS pumping.

**Scenarios**| **What is?**| **Template**| **What to do?**| **Reference
Articles**| **Reference Jira**  
---|---|---|---|---|---  
**SMS Pumping**|  SMS pumping is also referred to as traffic pumping or
artificially inflated traffic (AIT). In this type of telecom fraud, bad actors
use automated systems to trigger sharp spikes in traffic toward numbers they
own and reap a share of the charges generated|  _We should also provide the IP
addresses from which the messages were triggered so that they are aware that
the messages were triggered from their IP itself. We can get the IP from the_
_Quicksight dashboard_ _or we can get them from DevOps Team as well.
__________________________________________________Hello Team,__Greetings for
the day!__Upon reviewing the recent activity on your Plivo account, we've
noticed some irregularities that require your attention. Our team has
validated the details and confirmed that there hasn't been a breach of your
account. However, it appears that your website may be susceptible to SMS
pumping.__To address this issue and prevent further misuse, we recommend
implementing safeguards on your website form where mobile numbers are
requested. You can find detailed instructions on how to safeguard your website
from SMS pumping in_ _this blog post_ _.__Additionally, it's important to note
that customers will still be charged for any messages triggered, but through
the provided feature, customers will be able to set a cap on the maximum auto-
recharge in a day or week.__To further enhance security, we suggest taking the
following actions:_

  * _Enable fraud shield**< <Hyper Link>>**_
  * _Set recharge limit**< <Hyper Link>>**_

_You can find detailed instructions on how to use these features in our_ _FAQs section_ _.__Please let me know if there is anything I can assist you with further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _SMS pumping issue_  
**Account Breach**|  Customer complains about his account was
hacked/compromised and unauthorized calls and messages were triggered from
his/her account which resulted in a loss of credit/money and requesting for a
refund.| _Whenever Account Breach is reported, we should initially send the
response to the customers to let them know how to secure their account at the
earliest :__We should also provide the IP addresses from which the
messages/calls were triggered and the login IP 's, We can get the IP from the
__Quicksight dashboard_ _or we can get them from DevOps Team as well.
____________________________________________________Hi Team,_  
_Greetings from Plivo Support!__We have received your request and understand
your account has been breached.__We recommend you use Fraud Shield to help
curb the risk of SMS fraud, such as_ _SMS pumping_ _and_ _account token
takeover_ _. Fraud Shield offers two primary features that operate at the
destination country level: Geo Permissions and Fraud Thresholds._  
_ _  
_Geo Permissions allows you to control the countries to which your SMS traffic
is sent. We 'll block (and not charge for) any messages that are intended for
countries not included in your destination list._  
_ _  
_Fraud Thresholds can be enabled for countries on your designation list. It 's
a limit of how many messages can be set per hour to the countries that you
have approved. This control allows you to take corrective action if the
threshold is breached.__We recommend that you secure your Plivo account
immediately by taking the following steps:_

  * _Change your Plivo Auth Token:__Generate Auth Token_
  *  _Change your login password:__Reset Password_
  *  _Enable two-factor authentication (If not done already):__Profile Settings_
  *  _Restrict your geo permissions to countries that you want to send traffic to:__SMS Geo Permissions_
  *  _Disable voice functionality: Please let us know if you don't want to use voice so we can disable it altogether **(post confirmation from the customer)**._

__We also strongly recommend the below:__

  * _Plivo sends recharge alerts in real-time. If you find any unusual recharge activity, please act on any such alerts immediately._
  * _For SMS, manage your geo permissions_ _here_
  *  _For Voice, manage your geo permissions_ _here_
  *  _Secure your Plivo Auth Token from any public and client-side systems._
  * _Change the auth_token every time an employee with access to the auth_token leaves the company (if applicable)._

_If you have any questions or need further assistance, please feel free to
reach out to our customer support team.__Thank you for your attention to this
matter.___________________________________________________|

  1. We should pull the MDR logs and carefully consider that the account is breached and it is not a case of SMS pumping.
  2. We should be raising a JIRA with the relevant data on the FPT board tagging Rupam and Rajalekshmy.
  3. The below things should be present on the JIRA : 

  * MDR / CDR logs for the duration of the breach.
  * Message content if it is MDR.
  * Total charges incurred during the breach.
  * Email ID and Auth ID.

4\. After investigating the concern, Rupam shall either approve/deny the
refund request on the JIRA and we can let the customers know
accordingly.**_Feature Release_** :The Product Team has now rolled out a new
feature in the console under Payment Settings where the customers can
configure the account balance alerts to minimize the risk of service hindrance
due to low credit.  
The same can be done from the console _here_. We should always encourage customers to set that up.| | _Account Breach issue_  
  
                 

**Point of Contacts**

**and**** _Rajalekshmy Mahadevan_****and all JIRAs should be created on the
FPT board and tag the Finance Team and the respective PMs on the JIRA.**

**Legacy Confluence Articles** :

Account compromised - Reported by the customer

","support receives queries customers report accounts breached. **below two different types scenarios:** 1. **sms pumping issue** 2. **account compromised** **how understand type issue it?** 1. **in case sms pumping, typically sudden increase sms traffic, particularly otp (one-time password) arn (authorization code) traffic. despite increase volume, traffic profile remains consistent, content sent repeatedly.** 2. **on hand, instances compromised authentication ids tokens, random traffic starts appear. traffic consistent may vary content.** **checklist** * pull mdrs / cdrs mentioned period (the timespan breach). * analyze traffic triggered account viewing message content. * traffic triggered line usual message content, issue sms pumping. **scenarios**| **what is?**| **template**| **what do?**| **reference articles**| **reference jira** ---|---|---|---|---|--- **sms pumping**| sms pumping also referred traffic pumping artificially inflated traffic (ait). type telecom fraud, bad actors use automated systems trigger sharp spikes traffic toward numbers reap share charges generated| _we also provide ip addresses messages triggered aware messages triggered ip itself. get ip the_ _quicksight dashboard_ _or get devops team well. __________________________________________________hello team,__greetings day!__upon reviewing recent activity plivo account, we've noticed irregularities require attention. team validated details confirmed breach account. however, appears website may susceptible sms pumping.__to address issue prevent misuse, recommend implementing safeguards website form mobile numbers requested. find detailed instructions safeguard website sms pumping in_ _this blog post_ _.__additionally, important note customers still charged messages triggered, provided feature, customers able set cap maximum auto- recharge day week.__to enhance security, suggest taking following actions:_ * _enable fraud shield**< >**_ * _set recharge limit**< >**_ _you find detailed instructions use features our_ _faqs section_ _.__please let know anything assist further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _sms pumping issue_ **account breach**| customer complains account hacked/compromised unauthorized calls messages triggered his/her account resulted loss credit/money requesting refund.| _whenever account breach reported, initially send response customers let know secure account earliest :__we also provide ip addresses messages/calls triggered login ip 's, get ip __quicksight dashboard_ _or get devops team well. ____________________________________________________hi team,_ _greetings plivo support!__we received request understand account breached.__we recommend use fraud shield help curb risk sms fraud, as_ _sms pumping_ _and_ _account token takeover_ _. fraud shield offers two primary features operate destination country level: geo permissions fraud thresholds._ _ _ _geo permissions allows control countries sms traffic sent. 'll block (and charge for) messages intended countries included destination list._ _ _ _fraud thresholds enabled countries designation list. 's limit many messages set per hour countries approved. control allows take corrective action threshold breached.__we recommend secure plivo account immediately taking following steps:_ * _change plivo auth token:__generate auth token_ * _change login password:__reset password_ * _enable two-factor authentication (if done already):__profile settings_ * _restrict geo permissions countries want send traffic to:__sms geo permissions_ * _disable voice functionality: please let us know want use voice disable altogether **(post confirmation customer)**._ __we also strongly recommend below:__ * _plivo sends recharge alerts real-time. find unusual recharge activity, please act alerts immediately._ * _for sms, manage geo permissions_ _here_ * _for voice, manage geo permissions_ _here_ * _secure plivo auth token public client-side systems._ * _change auth_token every time employee access auth_token leaves company (if applicable)._ _if questions need assistance, please feel free reach customer support team.__thank attention matter.___________________________________________________| 1. pull mdr logs carefully consider account breached case sms pumping. 2. raising jira relevant data fpt board tagging rupam rajalekshmy. 3. things present jira : * mdr / cdr logs duration breach. * message content mdr. * total charges incurred breach. * email id auth id. 4\. investigating concern, rupam shall either approve/deny refund request jira let customers know accordingly.**_feature release_** :the product team rolled new feature console payment settings customers configure account balance alerts minimize risk service hindrance due low credit. done console _here_. always encourage customers set up.| | _account breach issue_ **point contacts** **and**** _rajalekshmy mahadevan_****and jiras created fpt board tag finance team respective pms jira.** **legacy confluence articles** : account compromised - reported customer","support receives queries customers report accounts breached. **below two different types scenarios:** 1. **sms pumping issue** 2. **account compromised** **how understand type issue it? ** 1. **in case sms pumping, typically sudden increase sms traffic, particularly otp (one-time password) arn (authorization code) traffic. despite increase volume, traffic profile remains consistent, content sent repeatedly. ** 2."
3711140012,Account Breached/Compromised Process,"Support receives queries where the customers report that their accounts are
breached.  
  
**Below are the two different types of scenarios:**

  1. **SMS Pumping Issue**

  2. **Account Compromised**  

**How to understand which type of issue is it?**

  1. **In the case of SMS pumping, there is typically a sudden increase in SMS traffic, particularly OTP (One-Time Password) or ARN (Authorization Code) traffic. Despite the increase in volume, the traffic profile remains consistent, with the same content being sent repeatedly.**

  2. **On the other hand, in instances of compromised authentication IDs or tokens, random traffic starts to appear. This traffic is not consistent and may vary in content.**

**Checklist**

  * We should pull out the MDRs / CDRs for the mentioned period (the timespan of the breach).

  * Analyze the traffic triggered from the account by viewing the message content.

  * If the traffic triggered is in line with their usual message content, then it is the issue of SMS pumping.

**Scenarios**| **What is?**| **Template**| **What to do?**| **Reference
Articles**| **Reference Jira**  
---|---|---|---|---|---  
**SMS Pumping**|  SMS pumping is also referred to as traffic pumping or
artificially inflated traffic (AIT). In this type of telecom fraud, bad actors
use automated systems to trigger sharp spikes in traffic toward numbers they
own and reap a share of the charges generated|  _We should also provide the IP
addresses from which the messages were triggered so that they are aware that
the messages were triggered from their IP itself. We can get the IP from the_
_Quicksight dashboard_ _or we can get them from DevOps Team as well.
__________________________________________________Hello Team,__Greetings for
the day!__Upon reviewing the recent activity on your Plivo account, we've
noticed some irregularities that require your attention. Our team has
validated the details and confirmed that there hasn't been a breach of your
account. However, it appears that your website may be susceptible to SMS
pumping.__To address this issue and prevent further misuse, we recommend
implementing safeguards on your website form where mobile numbers are
requested. You can find detailed instructions on how to safeguard your website
from SMS pumping in_ _this blog post_ _.__Additionally, it's important to note
that customers will still be charged for any messages triggered, but through
the provided feature, customers will be able to set a cap on the maximum auto-
recharge in a day or week.__To further enhance security, we suggest taking the
following actions:_

  * _Enable fraud shield**< <Hyper Link>>**_
  * _Set recharge limit**< <Hyper Link>>**_

_You can find detailed instructions on how to use these features in our_ _FAQs section_ _.__Please let me know if there is anything I can assist you with further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _SMS pumping issue_  
**Account Breach**|  Customer complains about his account was
hacked/compromised and unauthorized calls and messages were triggered from
his/her account which resulted in a loss of credit/money and requesting for a
refund.| _Whenever Account Breach is reported, we should initially send the
response to the customers to let them know how to secure their account at the
earliest :__We should also provide the IP addresses from which the
messages/calls were triggered and the login IP 's, We can get the IP from the
__Quicksight dashboard_ _or we can get them from DevOps Team as well.
____________________________________________________Hi Team,_  
_Greetings from Plivo Support!__We have received your request and understand
your account has been breached.__We recommend you use Fraud Shield to help
curb the risk of SMS fraud, such as_ _SMS pumping_ _and_ _account token
takeover_ _. Fraud Shield offers two primary features that operate at the
destination country level: Geo Permissions and Fraud Thresholds._  
_ _  
_Geo Permissions allows you to control the countries to which your SMS traffic
is sent. We 'll block (and not charge for) any messages that are intended for
countries not included in your destination list._  
_ _  
_Fraud Thresholds can be enabled for countries on your designation list. It 's
a limit of how many messages can be set per hour to the countries that you
have approved. This control allows you to take corrective action if the
threshold is breached.__We recommend that you secure your Plivo account
immediately by taking the following steps:_

  * _Change your Plivo Auth Token:__Generate Auth Token_
  *  _Change your login password:__Reset Password_
  *  _Enable two-factor authentication (If not done already):__Profile Settings_
  *  _Restrict your geo permissions to countries that you want to send traffic to:__SMS Geo Permissions_
  *  _Disable voice functionality: Please let us know if you don't want to use voice so we can disable it altogether **(post confirmation from the customer)**._

__We also strongly recommend the below:__

  * _Plivo sends recharge alerts in real-time. If you find any unusual recharge activity, please act on any such alerts immediately._
  * _For SMS, manage your geo permissions_ _here_
  *  _For Voice, manage your geo permissions_ _here_
  *  _Secure your Plivo Auth Token from any public and client-side systems._
  * _Change the auth_token every time an employee with access to the auth_token leaves the company (if applicable)._

_If you have any questions or need further assistance, please feel free to
reach out to our customer support team.__Thank you for your attention to this
matter.___________________________________________________|

  1. We should pull the MDR logs and carefully consider that the account is breached and it is not a case of SMS pumping.
  2. We should be raising a JIRA with the relevant data on the FPT board tagging Rupam and Rajalekshmy.
  3. The below things should be present on the JIRA : 

  * MDR / CDR logs for the duration of the breach.
  * Message content if it is MDR.
  * Total charges incurred during the breach.
  * Email ID and Auth ID.

4\. After investigating the concern, Rupam shall either approve/deny the
refund request on the JIRA and we can let the customers know
accordingly.**_Feature Release_** :The Product Team has now rolled out a new
feature in the console under Payment Settings where the customers can
configure the account balance alerts to minimize the risk of service hindrance
due to low credit.  
The same can be done from the console _here_. We should always encourage customers to set that up.| | _Account Breach issue_  
  
                 

**Point of Contacts**

**and**** _Rajalekshmy Mahadevan_****and all JIRAs should be created on the
FPT board and tag the Finance Team and the respective PMs on the JIRA.**

**Legacy Confluence Articles** :

Account compromised - Reported by the customer

","support receives queries customers report accounts breached. **below two different types scenarios:** 1. **sms pumping issue** 2. **account compromised** **how understand type issue it?** 1. **in case sms pumping, typically sudden increase sms traffic, particularly otp (one-time password) arn (authorization code) traffic. despite increase volume, traffic profile remains consistent, content sent repeatedly.** 2. **on hand, instances compromised authentication ids tokens, random traffic starts appear. traffic consistent may vary content.** **checklist** * pull mdrs / cdrs mentioned period (the timespan breach). * analyze traffic triggered account viewing message content. * traffic triggered line usual message content, issue sms pumping. **scenarios**| **what is?**| **template**| **what do?**| **reference articles**| **reference jira** ---|---|---|---|---|--- **sms pumping**| sms pumping also referred traffic pumping artificially inflated traffic (ait). type telecom fraud, bad actors use automated systems trigger sharp spikes traffic toward numbers reap share charges generated| _we also provide ip addresses messages triggered aware messages triggered ip itself. get ip the_ _quicksight dashboard_ _or get devops team well. __________________________________________________hello team,__greetings day!__upon reviewing recent activity plivo account, we've noticed irregularities require attention. team validated details confirmed breach account. however, appears website may susceptible sms pumping.__to address issue prevent misuse, recommend implementing safeguards website form mobile numbers requested. find detailed instructions safeguard website sms pumping in_ _this blog post_ _.__additionally, important note customers still charged messages triggered, provided feature, customers able set cap maximum auto- recharge day week.__to enhance security, suggest taking following actions:_ * _enable fraud shield**< >**_ * _set recharge limit**< >**_ _you find detailed instructions use features our_ _faqs section_ _.__please let know anything assist further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _sms pumping issue_ **account breach**| customer complains account hacked/compromised unauthorized calls messages triggered his/her account resulted loss credit/money requesting refund.| _whenever account breach reported, initially send response customers let know secure account earliest :__we also provide ip addresses messages/calls triggered login ip 's, get ip __quicksight dashboard_ _or get devops team well. ____________________________________________________hi team,_ _greetings plivo support!__we received request understand account breached.__we recommend use fraud shield help curb risk sms fraud, as_ _sms pumping_ _and_ _account token takeover_ _. fraud shield offers two primary features operate destination country level: geo permissions fraud thresholds._ _ _ _geo permissions allows control countries sms traffic sent. 'll block (and charge for) messages intended countries included destination list._ _ _ _fraud thresholds enabled countries designation list. 's limit many messages set per hour countries approved. control allows take corrective action threshold breached.__we recommend secure plivo account immediately taking following steps:_ * _change plivo auth token:__generate auth token_ * _change login password:__reset password_ * _enable two-factor authentication (if done already):__profile settings_ * _restrict geo permissions countries want send traffic to:__sms geo permissions_ * _disable voice functionality: please let us know want use voice disable altogether **(post confirmation customer)**._ __we also strongly recommend below:__ * _plivo sends recharge alerts real-time. find unusual recharge activity, please act alerts immediately._ * _for sms, manage geo permissions_ _here_ * _for voice, manage geo permissions_ _here_ * _secure plivo auth token public client-side systems._ * _change auth_token every time employee access auth_token leaves company (if applicable)._ _if questions need assistance, please feel free reach customer support team.__thank attention matter.___________________________________________________| 1. pull mdr logs carefully consider account breached case sms pumping. 2. raising jira relevant data fpt board tagging rupam rajalekshmy. 3. things present jira : * mdr / cdr logs duration breach. * message content mdr. * total charges incurred breach. * email id auth id. 4\. investigating concern, rupam shall either approve/deny refund request jira let customers know accordingly.**_feature release_** :the product team rolled new feature console payment settings customers configure account balance alerts minimize risk service hindrance due low credit. done console _here_. always encourage customers set up.| | _account breach issue_ **point contacts** **and**** _rajalekshmy mahadevan_****and jiras created fpt board tag finance team respective pms jira.** **legacy confluence articles** : account compromised - reported customer","**on hand, instances compromised authentication ids tokens, random traffic starts appear. traffic consistent may vary content. ** **checklist** * pull mdrs / cdrs mentioned period (the timespan breach). * analyze traffic triggered account viewing message content. * traffic triggered line usual message content, issue sms pumping. **scenarios**| **what is? **| **template**| **what do?"
3711140012,Account Breached/Compromised Process,"Support receives queries where the customers report that their accounts are
breached.  
  
**Below are the two different types of scenarios:**

  1. **SMS Pumping Issue**

  2. **Account Compromised**  

**How to understand which type of issue is it?**

  1. **In the case of SMS pumping, there is typically a sudden increase in SMS traffic, particularly OTP (One-Time Password) or ARN (Authorization Code) traffic. Despite the increase in volume, the traffic profile remains consistent, with the same content being sent repeatedly.**

  2. **On the other hand, in instances of compromised authentication IDs or tokens, random traffic starts to appear. This traffic is not consistent and may vary in content.**

**Checklist**

  * We should pull out the MDRs / CDRs for the mentioned period (the timespan of the breach).

  * Analyze the traffic triggered from the account by viewing the message content.

  * If the traffic triggered is in line with their usual message content, then it is the issue of SMS pumping.

**Scenarios**| **What is?**| **Template**| **What to do?**| **Reference
Articles**| **Reference Jira**  
---|---|---|---|---|---  
**SMS Pumping**|  SMS pumping is also referred to as traffic pumping or
artificially inflated traffic (AIT). In this type of telecom fraud, bad actors
use automated systems to trigger sharp spikes in traffic toward numbers they
own and reap a share of the charges generated|  _We should also provide the IP
addresses from which the messages were triggered so that they are aware that
the messages were triggered from their IP itself. We can get the IP from the_
_Quicksight dashboard_ _or we can get them from DevOps Team as well.
__________________________________________________Hello Team,__Greetings for
the day!__Upon reviewing the recent activity on your Plivo account, we've
noticed some irregularities that require your attention. Our team has
validated the details and confirmed that there hasn't been a breach of your
account. However, it appears that your website may be susceptible to SMS
pumping.__To address this issue and prevent further misuse, we recommend
implementing safeguards on your website form where mobile numbers are
requested. You can find detailed instructions on how to safeguard your website
from SMS pumping in_ _this blog post_ _.__Additionally, it's important to note
that customers will still be charged for any messages triggered, but through
the provided feature, customers will be able to set a cap on the maximum auto-
recharge in a day or week.__To further enhance security, we suggest taking the
following actions:_

  * _Enable fraud shield**< <Hyper Link>>**_
  * _Set recharge limit**< <Hyper Link>>**_

_You can find detailed instructions on how to use these features in our_ _FAQs section_ _.__Please let me know if there is anything I can assist you with further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _SMS pumping issue_  
**Account Breach**|  Customer complains about his account was
hacked/compromised and unauthorized calls and messages were triggered from
his/her account which resulted in a loss of credit/money and requesting for a
refund.| _Whenever Account Breach is reported, we should initially send the
response to the customers to let them know how to secure their account at the
earliest :__We should also provide the IP addresses from which the
messages/calls were triggered and the login IP 's, We can get the IP from the
__Quicksight dashboard_ _or we can get them from DevOps Team as well.
____________________________________________________Hi Team,_  
_Greetings from Plivo Support!__We have received your request and understand
your account has been breached.__We recommend you use Fraud Shield to help
curb the risk of SMS fraud, such as_ _SMS pumping_ _and_ _account token
takeover_ _. Fraud Shield offers two primary features that operate at the
destination country level: Geo Permissions and Fraud Thresholds._  
_ _  
_Geo Permissions allows you to control the countries to which your SMS traffic
is sent. We 'll block (and not charge for) any messages that are intended for
countries not included in your destination list._  
_ _  
_Fraud Thresholds can be enabled for countries on your designation list. It 's
a limit of how many messages can be set per hour to the countries that you
have approved. This control allows you to take corrective action if the
threshold is breached.__We recommend that you secure your Plivo account
immediately by taking the following steps:_

  * _Change your Plivo Auth Token:__Generate Auth Token_
  *  _Change your login password:__Reset Password_
  *  _Enable two-factor authentication (If not done already):__Profile Settings_
  *  _Restrict your geo permissions to countries that you want to send traffic to:__SMS Geo Permissions_
  *  _Disable voice functionality: Please let us know if you don't want to use voice so we can disable it altogether **(post confirmation from the customer)**._

__We also strongly recommend the below:__

  * _Plivo sends recharge alerts in real-time. If you find any unusual recharge activity, please act on any such alerts immediately._
  * _For SMS, manage your geo permissions_ _here_
  *  _For Voice, manage your geo permissions_ _here_
  *  _Secure your Plivo Auth Token from any public and client-side systems._
  * _Change the auth_token every time an employee with access to the auth_token leaves the company (if applicable)._

_If you have any questions or need further assistance, please feel free to
reach out to our customer support team.__Thank you for your attention to this
matter.___________________________________________________|

  1. We should pull the MDR logs and carefully consider that the account is breached and it is not a case of SMS pumping.
  2. We should be raising a JIRA with the relevant data on the FPT board tagging Rupam and Rajalekshmy.
  3. The below things should be present on the JIRA : 

  * MDR / CDR logs for the duration of the breach.
  * Message content if it is MDR.
  * Total charges incurred during the breach.
  * Email ID and Auth ID.

4\. After investigating the concern, Rupam shall either approve/deny the
refund request on the JIRA and we can let the customers know
accordingly.**_Feature Release_** :The Product Team has now rolled out a new
feature in the console under Payment Settings where the customers can
configure the account balance alerts to minimize the risk of service hindrance
due to low credit.  
The same can be done from the console _here_. We should always encourage customers to set that up.| | _Account Breach issue_  
  
                 

**Point of Contacts**

**and**** _Rajalekshmy Mahadevan_****and all JIRAs should be created on the
FPT board and tag the Finance Team and the respective PMs on the JIRA.**

**Legacy Confluence Articles** :

Account compromised - Reported by the customer

","support receives queries customers report accounts breached. **below two different types scenarios:** 1. **sms pumping issue** 2. **account compromised** **how understand type issue it?** 1. **in case sms pumping, typically sudden increase sms traffic, particularly otp (one-time password) arn (authorization code) traffic. despite increase volume, traffic profile remains consistent, content sent repeatedly.** 2. **on hand, instances compromised authentication ids tokens, random traffic starts appear. traffic consistent may vary content.** **checklist** * pull mdrs / cdrs mentioned period (the timespan breach). * analyze traffic triggered account viewing message content. * traffic triggered line usual message content, issue sms pumping. **scenarios**| **what is?**| **template**| **what do?**| **reference articles**| **reference jira** ---|---|---|---|---|--- **sms pumping**| sms pumping also referred traffic pumping artificially inflated traffic (ait). type telecom fraud, bad actors use automated systems trigger sharp spikes traffic toward numbers reap share charges generated| _we also provide ip addresses messages triggered aware messages triggered ip itself. get ip the_ _quicksight dashboard_ _or get devops team well. __________________________________________________hello team,__greetings day!__upon reviewing recent activity plivo account, we've noticed irregularities require attention. team validated details confirmed breach account. however, appears website may susceptible sms pumping.__to address issue prevent misuse, recommend implementing safeguards website form mobile numbers requested. find detailed instructions safeguard website sms pumping in_ _this blog post_ _.__additionally, important note customers still charged messages triggered, provided feature, customers able set cap maximum auto- recharge day week.__to enhance security, suggest taking following actions:_ * _enable fraud shield**< >**_ * _set recharge limit**< >**_ _you find detailed instructions use features our_ _faqs section_ _.__please let know anything assist further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _sms pumping issue_ **account breach**| customer complains account hacked/compromised unauthorized calls messages triggered his/her account resulted loss credit/money requesting refund.| _whenever account breach reported, initially send response customers let know secure account earliest :__we also provide ip addresses messages/calls triggered login ip 's, get ip __quicksight dashboard_ _or get devops team well. ____________________________________________________hi team,_ _greetings plivo support!__we received request understand account breached.__we recommend use fraud shield help curb risk sms fraud, as_ _sms pumping_ _and_ _account token takeover_ _. fraud shield offers two primary features operate destination country level: geo permissions fraud thresholds._ _ _ _geo permissions allows control countries sms traffic sent. 'll block (and charge for) messages intended countries included destination list._ _ _ _fraud thresholds enabled countries designation list. 's limit many messages set per hour countries approved. control allows take corrective action threshold breached.__we recommend secure plivo account immediately taking following steps:_ * _change plivo auth token:__generate auth token_ * _change login password:__reset password_ * _enable two-factor authentication (if done already):__profile settings_ * _restrict geo permissions countries want send traffic to:__sms geo permissions_ * _disable voice functionality: please let us know want use voice disable altogether **(post confirmation customer)**._ __we also strongly recommend below:__ * _plivo sends recharge alerts real-time. find unusual recharge activity, please act alerts immediately._ * _for sms, manage geo permissions_ _here_ * _for voice, manage geo permissions_ _here_ * _secure plivo auth token public client-side systems._ * _change auth_token every time employee access auth_token leaves company (if applicable)._ _if questions need assistance, please feel free reach customer support team.__thank attention matter.___________________________________________________| 1. pull mdr logs carefully consider account breached case sms pumping. 2. raising jira relevant data fpt board tagging rupam rajalekshmy. 3. things present jira : * mdr / cdr logs duration breach. * message content mdr. * total charges incurred breach. * email id auth id. 4\. investigating concern, rupam shall either approve/deny refund request jira let customers know accordingly.**_feature release_** :the product team rolled new feature console payment settings customers configure account balance alerts minimize risk service hindrance due low credit. done console _here_. always encourage customers set up.| | _account breach issue_ **point contacts** **and**** _rajalekshmy mahadevan_****and jiras created fpt board tag finance team respective pms jira.** **legacy confluence articles** : account compromised - reported customer","**| **reference articles**| **reference jira** ---|---|---|---|---|--- **sms pumping**| sms pumping also referred traffic pumping artificially inflated traffic (ait). type telecom fraud, bad actors use automated systems trigger sharp spikes traffic toward numbers reap share charges generated| _we also provide ip addresses messages triggered aware messages triggered ip itself. get ip the_ _quicksight dashboard_ _or get devops team well."
3711140012,Account Breached/Compromised Process,"Support receives queries where the customers report that their accounts are
breached.  
  
**Below are the two different types of scenarios:**

  1. **SMS Pumping Issue**

  2. **Account Compromised**  

**How to understand which type of issue is it?**

  1. **In the case of SMS pumping, there is typically a sudden increase in SMS traffic, particularly OTP (One-Time Password) or ARN (Authorization Code) traffic. Despite the increase in volume, the traffic profile remains consistent, with the same content being sent repeatedly.**

  2. **On the other hand, in instances of compromised authentication IDs or tokens, random traffic starts to appear. This traffic is not consistent and may vary in content.**

**Checklist**

  * We should pull out the MDRs / CDRs for the mentioned period (the timespan of the breach).

  * Analyze the traffic triggered from the account by viewing the message content.

  * If the traffic triggered is in line with their usual message content, then it is the issue of SMS pumping.

**Scenarios**| **What is?**| **Template**| **What to do?**| **Reference
Articles**| **Reference Jira**  
---|---|---|---|---|---  
**SMS Pumping**|  SMS pumping is also referred to as traffic pumping or
artificially inflated traffic (AIT). In this type of telecom fraud, bad actors
use automated systems to trigger sharp spikes in traffic toward numbers they
own and reap a share of the charges generated|  _We should also provide the IP
addresses from which the messages were triggered so that they are aware that
the messages were triggered from their IP itself. We can get the IP from the_
_Quicksight dashboard_ _or we can get them from DevOps Team as well.
__________________________________________________Hello Team,__Greetings for
the day!__Upon reviewing the recent activity on your Plivo account, we've
noticed some irregularities that require your attention. Our team has
validated the details and confirmed that there hasn't been a breach of your
account. However, it appears that your website may be susceptible to SMS
pumping.__To address this issue and prevent further misuse, we recommend
implementing safeguards on your website form where mobile numbers are
requested. You can find detailed instructions on how to safeguard your website
from SMS pumping in_ _this blog post_ _.__Additionally, it's important to note
that customers will still be charged for any messages triggered, but through
the provided feature, customers will be able to set a cap on the maximum auto-
recharge in a day or week.__To further enhance security, we suggest taking the
following actions:_

  * _Enable fraud shield**< <Hyper Link>>**_
  * _Set recharge limit**< <Hyper Link>>**_

_You can find detailed instructions on how to use these features in our_ _FAQs section_ _.__Please let me know if there is anything I can assist you with further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _SMS pumping issue_  
**Account Breach**|  Customer complains about his account was
hacked/compromised and unauthorized calls and messages were triggered from
his/her account which resulted in a loss of credit/money and requesting for a
refund.| _Whenever Account Breach is reported, we should initially send the
response to the customers to let them know how to secure their account at the
earliest :__We should also provide the IP addresses from which the
messages/calls were triggered and the login IP 's, We can get the IP from the
__Quicksight dashboard_ _or we can get them from DevOps Team as well.
____________________________________________________Hi Team,_  
_Greetings from Plivo Support!__We have received your request and understand
your account has been breached.__We recommend you use Fraud Shield to help
curb the risk of SMS fraud, such as_ _SMS pumping_ _and_ _account token
takeover_ _. Fraud Shield offers two primary features that operate at the
destination country level: Geo Permissions and Fraud Thresholds._  
_ _  
_Geo Permissions allows you to control the countries to which your SMS traffic
is sent. We 'll block (and not charge for) any messages that are intended for
countries not included in your destination list._  
_ _  
_Fraud Thresholds can be enabled for countries on your designation list. It 's
a limit of how many messages can be set per hour to the countries that you
have approved. This control allows you to take corrective action if the
threshold is breached.__We recommend that you secure your Plivo account
immediately by taking the following steps:_

  * _Change your Plivo Auth Token:__Generate Auth Token_
  *  _Change your login password:__Reset Password_
  *  _Enable two-factor authentication (If not done already):__Profile Settings_
  *  _Restrict your geo permissions to countries that you want to send traffic to:__SMS Geo Permissions_
  *  _Disable voice functionality: Please let us know if you don't want to use voice so we can disable it altogether **(post confirmation from the customer)**._

__We also strongly recommend the below:__

  * _Plivo sends recharge alerts in real-time. If you find any unusual recharge activity, please act on any such alerts immediately._
  * _For SMS, manage your geo permissions_ _here_
  *  _For Voice, manage your geo permissions_ _here_
  *  _Secure your Plivo Auth Token from any public and client-side systems._
  * _Change the auth_token every time an employee with access to the auth_token leaves the company (if applicable)._

_If you have any questions or need further assistance, please feel free to
reach out to our customer support team.__Thank you for your attention to this
matter.___________________________________________________|

  1. We should pull the MDR logs and carefully consider that the account is breached and it is not a case of SMS pumping.
  2. We should be raising a JIRA with the relevant data on the FPT board tagging Rupam and Rajalekshmy.
  3. The below things should be present on the JIRA : 

  * MDR / CDR logs for the duration of the breach.
  * Message content if it is MDR.
  * Total charges incurred during the breach.
  * Email ID and Auth ID.

4\. After investigating the concern, Rupam shall either approve/deny the
refund request on the JIRA and we can let the customers know
accordingly.**_Feature Release_** :The Product Team has now rolled out a new
feature in the console under Payment Settings where the customers can
configure the account balance alerts to minimize the risk of service hindrance
due to low credit.  
The same can be done from the console _here_. We should always encourage customers to set that up.| | _Account Breach issue_  
  
                 

**Point of Contacts**

**and**** _Rajalekshmy Mahadevan_****and all JIRAs should be created on the
FPT board and tag the Finance Team and the respective PMs on the JIRA.**

**Legacy Confluence Articles** :

Account compromised - Reported by the customer

","support receives queries customers report accounts breached. **below two different types scenarios:** 1. **sms pumping issue** 2. **account compromised** **how understand type issue it?** 1. **in case sms pumping, typically sudden increase sms traffic, particularly otp (one-time password) arn (authorization code) traffic. despite increase volume, traffic profile remains consistent, content sent repeatedly.** 2. **on hand, instances compromised authentication ids tokens, random traffic starts appear. traffic consistent may vary content.** **checklist** * pull mdrs / cdrs mentioned period (the timespan breach). * analyze traffic triggered account viewing message content. * traffic triggered line usual message content, issue sms pumping. **scenarios**| **what is?**| **template**| **what do?**| **reference articles**| **reference jira** ---|---|---|---|---|--- **sms pumping**| sms pumping also referred traffic pumping artificially inflated traffic (ait). type telecom fraud, bad actors use automated systems trigger sharp spikes traffic toward numbers reap share charges generated| _we also provide ip addresses messages triggered aware messages triggered ip itself. get ip the_ _quicksight dashboard_ _or get devops team well. __________________________________________________hello team,__greetings day!__upon reviewing recent activity plivo account, we've noticed irregularities require attention. team validated details confirmed breach account. however, appears website may susceptible sms pumping.__to address issue prevent misuse, recommend implementing safeguards website form mobile numbers requested. find detailed instructions safeguard website sms pumping in_ _this blog post_ _.__additionally, important note customers still charged messages triggered, provided feature, customers able set cap maximum auto- recharge day week.__to enhance security, suggest taking following actions:_ * _enable fraud shield**< >**_ * _set recharge limit**< >**_ _you find detailed instructions use features our_ _faqs section_ _.__please let know anything assist further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _sms pumping issue_ **account breach**| customer complains account hacked/compromised unauthorized calls messages triggered his/her account resulted loss credit/money requesting refund.| _whenever account breach reported, initially send response customers let know secure account earliest :__we also provide ip addresses messages/calls triggered login ip 's, get ip __quicksight dashboard_ _or get devops team well. ____________________________________________________hi team,_ _greetings plivo support!__we received request understand account breached.__we recommend use fraud shield help curb risk sms fraud, as_ _sms pumping_ _and_ _account token takeover_ _. fraud shield offers two primary features operate destination country level: geo permissions fraud thresholds._ _ _ _geo permissions allows control countries sms traffic sent. 'll block (and charge for) messages intended countries included destination list._ _ _ _fraud thresholds enabled countries designation list. 's limit many messages set per hour countries approved. control allows take corrective action threshold breached.__we recommend secure plivo account immediately taking following steps:_ * _change plivo auth token:__generate auth token_ * _change login password:__reset password_ * _enable two-factor authentication (if done already):__profile settings_ * _restrict geo permissions countries want send traffic to:__sms geo permissions_ * _disable voice functionality: please let us know want use voice disable altogether **(post confirmation customer)**._ __we also strongly recommend below:__ * _plivo sends recharge alerts real-time. find unusual recharge activity, please act alerts immediately._ * _for sms, manage geo permissions_ _here_ * _for voice, manage geo permissions_ _here_ * _secure plivo auth token public client-side systems._ * _change auth_token every time employee access auth_token leaves company (if applicable)._ _if questions need assistance, please feel free reach customer support team.__thank attention matter.___________________________________________________| 1. pull mdr logs carefully consider account breached case sms pumping. 2. raising jira relevant data fpt board tagging rupam rajalekshmy. 3. things present jira : * mdr / cdr logs duration breach. * message content mdr. * total charges incurred breach. * email id auth id. 4\. investigating concern, rupam shall either approve/deny refund request jira let customers know accordingly.**_feature release_** :the product team rolled new feature console payment settings customers configure account balance alerts minimize risk service hindrance due low credit. done console _here_. always encourage customers set up.| | _account breach issue_ **point contacts** **and**** _rajalekshmy mahadevan_****and jiras created fpt board tag finance team respective pms jira.** **legacy confluence articles** : account compromised - reported customer","__________________________________________________hello team,__greetings day!__upon reviewing recent activity plivo account, we've noticed irregularities require attention. team validated details confirmed breach account. however, appears website may susceptible sms pumping.__to address issue prevent misuse, recommend implementing safeguards website form mobile numbers requested."
3711140012,Account Breached/Compromised Process,"Support receives queries where the customers report that their accounts are
breached.  
  
**Below are the two different types of scenarios:**

  1. **SMS Pumping Issue**

  2. **Account Compromised**  

**How to understand which type of issue is it?**

  1. **In the case of SMS pumping, there is typically a sudden increase in SMS traffic, particularly OTP (One-Time Password) or ARN (Authorization Code) traffic. Despite the increase in volume, the traffic profile remains consistent, with the same content being sent repeatedly.**

  2. **On the other hand, in instances of compromised authentication IDs or tokens, random traffic starts to appear. This traffic is not consistent and may vary in content.**

**Checklist**

  * We should pull out the MDRs / CDRs for the mentioned period (the timespan of the breach).

  * Analyze the traffic triggered from the account by viewing the message content.

  * If the traffic triggered is in line with their usual message content, then it is the issue of SMS pumping.

**Scenarios**| **What is?**| **Template**| **What to do?**| **Reference
Articles**| **Reference Jira**  
---|---|---|---|---|---  
**SMS Pumping**|  SMS pumping is also referred to as traffic pumping or
artificially inflated traffic (AIT). In this type of telecom fraud, bad actors
use automated systems to trigger sharp spikes in traffic toward numbers they
own and reap a share of the charges generated|  _We should also provide the IP
addresses from which the messages were triggered so that they are aware that
the messages were triggered from their IP itself. We can get the IP from the_
_Quicksight dashboard_ _or we can get them from DevOps Team as well.
__________________________________________________Hello Team,__Greetings for
the day!__Upon reviewing the recent activity on your Plivo account, we've
noticed some irregularities that require your attention. Our team has
validated the details and confirmed that there hasn't been a breach of your
account. However, it appears that your website may be susceptible to SMS
pumping.__To address this issue and prevent further misuse, we recommend
implementing safeguards on your website form where mobile numbers are
requested. You can find detailed instructions on how to safeguard your website
from SMS pumping in_ _this blog post_ _.__Additionally, it's important to note
that customers will still be charged for any messages triggered, but through
the provided feature, customers will be able to set a cap on the maximum auto-
recharge in a day or week.__To further enhance security, we suggest taking the
following actions:_

  * _Enable fraud shield**< <Hyper Link>>**_
  * _Set recharge limit**< <Hyper Link>>**_

_You can find detailed instructions on how to use these features in our_ _FAQs section_ _.__Please let me know if there is anything I can assist you with further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _SMS pumping issue_  
**Account Breach**|  Customer complains about his account was
hacked/compromised and unauthorized calls and messages were triggered from
his/her account which resulted in a loss of credit/money and requesting for a
refund.| _Whenever Account Breach is reported, we should initially send the
response to the customers to let them know how to secure their account at the
earliest :__We should also provide the IP addresses from which the
messages/calls were triggered and the login IP 's, We can get the IP from the
__Quicksight dashboard_ _or we can get them from DevOps Team as well.
____________________________________________________Hi Team,_  
_Greetings from Plivo Support!__We have received your request and understand
your account has been breached.__We recommend you use Fraud Shield to help
curb the risk of SMS fraud, such as_ _SMS pumping_ _and_ _account token
takeover_ _. Fraud Shield offers two primary features that operate at the
destination country level: Geo Permissions and Fraud Thresholds._  
_ _  
_Geo Permissions allows you to control the countries to which your SMS traffic
is sent. We 'll block (and not charge for) any messages that are intended for
countries not included in your destination list._  
_ _  
_Fraud Thresholds can be enabled for countries on your designation list. It 's
a limit of how many messages can be set per hour to the countries that you
have approved. This control allows you to take corrective action if the
threshold is breached.__We recommend that you secure your Plivo account
immediately by taking the following steps:_

  * _Change your Plivo Auth Token:__Generate Auth Token_
  *  _Change your login password:__Reset Password_
  *  _Enable two-factor authentication (If not done already):__Profile Settings_
  *  _Restrict your geo permissions to countries that you want to send traffic to:__SMS Geo Permissions_
  *  _Disable voice functionality: Please let us know if you don't want to use voice so we can disable it altogether **(post confirmation from the customer)**._

__We also strongly recommend the below:__

  * _Plivo sends recharge alerts in real-time. If you find any unusual recharge activity, please act on any such alerts immediately._
  * _For SMS, manage your geo permissions_ _here_
  *  _For Voice, manage your geo permissions_ _here_
  *  _Secure your Plivo Auth Token from any public and client-side systems._
  * _Change the auth_token every time an employee with access to the auth_token leaves the company (if applicable)._

_If you have any questions or need further assistance, please feel free to
reach out to our customer support team.__Thank you for your attention to this
matter.___________________________________________________|

  1. We should pull the MDR logs and carefully consider that the account is breached and it is not a case of SMS pumping.
  2. We should be raising a JIRA with the relevant data on the FPT board tagging Rupam and Rajalekshmy.
  3. The below things should be present on the JIRA : 

  * MDR / CDR logs for the duration of the breach.
  * Message content if it is MDR.
  * Total charges incurred during the breach.
  * Email ID and Auth ID.

4\. After investigating the concern, Rupam shall either approve/deny the
refund request on the JIRA and we can let the customers know
accordingly.**_Feature Release_** :The Product Team has now rolled out a new
feature in the console under Payment Settings where the customers can
configure the account balance alerts to minimize the risk of service hindrance
due to low credit.  
The same can be done from the console _here_. We should always encourage customers to set that up.| | _Account Breach issue_  
  
                 

**Point of Contacts**

**and**** _Rajalekshmy Mahadevan_****and all JIRAs should be created on the
FPT board and tag the Finance Team and the respective PMs on the JIRA.**

**Legacy Confluence Articles** :

Account compromised - Reported by the customer

","support receives queries customers report accounts breached. **below two different types scenarios:** 1. **sms pumping issue** 2. **account compromised** **how understand type issue it?** 1. **in case sms pumping, typically sudden increase sms traffic, particularly otp (one-time password) arn (authorization code) traffic. despite increase volume, traffic profile remains consistent, content sent repeatedly.** 2. **on hand, instances compromised authentication ids tokens, random traffic starts appear. traffic consistent may vary content.** **checklist** * pull mdrs / cdrs mentioned period (the timespan breach). * analyze traffic triggered account viewing message content. * traffic triggered line usual message content, issue sms pumping. **scenarios**| **what is?**| **template**| **what do?**| **reference articles**| **reference jira** ---|---|---|---|---|--- **sms pumping**| sms pumping also referred traffic pumping artificially inflated traffic (ait). type telecom fraud, bad actors use automated systems trigger sharp spikes traffic toward numbers reap share charges generated| _we also provide ip addresses messages triggered aware messages triggered ip itself. get ip the_ _quicksight dashboard_ _or get devops team well. __________________________________________________hello team,__greetings day!__upon reviewing recent activity plivo account, we've noticed irregularities require attention. team validated details confirmed breach account. however, appears website may susceptible sms pumping.__to address issue prevent misuse, recommend implementing safeguards website form mobile numbers requested. find detailed instructions safeguard website sms pumping in_ _this blog post_ _.__additionally, important note customers still charged messages triggered, provided feature, customers able set cap maximum auto- recharge day week.__to enhance security, suggest taking following actions:_ * _enable fraud shield**< >**_ * _set recharge limit**< >**_ _you find detailed instructions use features our_ _faqs section_ _.__please let know anything assist further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _sms pumping issue_ **account breach**| customer complains account hacked/compromised unauthorized calls messages triggered his/her account resulted loss credit/money requesting refund.| _whenever account breach reported, initially send response customers let know secure account earliest :__we also provide ip addresses messages/calls triggered login ip 's, get ip __quicksight dashboard_ _or get devops team well. ____________________________________________________hi team,_ _greetings plivo support!__we received request understand account breached.__we recommend use fraud shield help curb risk sms fraud, as_ _sms pumping_ _and_ _account token takeover_ _. fraud shield offers two primary features operate destination country level: geo permissions fraud thresholds._ _ _ _geo permissions allows control countries sms traffic sent. 'll block (and charge for) messages intended countries included destination list._ _ _ _fraud thresholds enabled countries designation list. 's limit many messages set per hour countries approved. control allows take corrective action threshold breached.__we recommend secure plivo account immediately taking following steps:_ * _change plivo auth token:__generate auth token_ * _change login password:__reset password_ * _enable two-factor authentication (if done already):__profile settings_ * _restrict geo permissions countries want send traffic to:__sms geo permissions_ * _disable voice functionality: please let us know want use voice disable altogether **(post confirmation customer)**._ __we also strongly recommend below:__ * _plivo sends recharge alerts real-time. find unusual recharge activity, please act alerts immediately._ * _for sms, manage geo permissions_ _here_ * _for voice, manage geo permissions_ _here_ * _secure plivo auth token public client-side systems._ * _change auth_token every time employee access auth_token leaves company (if applicable)._ _if questions need assistance, please feel free reach customer support team.__thank attention matter.___________________________________________________| 1. pull mdr logs carefully consider account breached case sms pumping. 2. raising jira relevant data fpt board tagging rupam rajalekshmy. 3. things present jira : * mdr / cdr logs duration breach. * message content mdr. * total charges incurred breach. * email id auth id. 4\. investigating concern, rupam shall either approve/deny refund request jira let customers know accordingly.**_feature release_** :the product team rolled new feature console payment settings customers configure account balance alerts minimize risk service hindrance due low credit. done console _here_. always encourage customers set up.| | _account breach issue_ **point contacts** **and**** _rajalekshmy mahadevan_****and jiras created fpt board tag finance team respective pms jira.** **legacy confluence articles** : account compromised - reported customer","find detailed instructions safeguard website sms pumping in_ _this blog post_ _.__additionally, important note customers still charged messages triggered, provided feature, customers able set cap maximum auto- recharge day week.__to enhance security, suggest taking following actions:_ * _enable fraud shield**< >**_ * _set recharge limit**< >**_ _you find detailed instructions use features our_ _faqs section_ _.__please let know anything assist further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _sms pumping issue_ **account breach**| customer complains account hacked/compromised unauthorized calls messages triggered his/her account resulted loss credit/money requesting refund.| _whenever account breach reported, initially send response customers let know secure account earliest :__we also provide ip addresses messages/calls triggered login ip 's, get ip __quicksight dashboard_ _or get devops team well."
3711140012,Account Breached/Compromised Process,"Support receives queries where the customers report that their accounts are
breached.  
  
**Below are the two different types of scenarios:**

  1. **SMS Pumping Issue**

  2. **Account Compromised**  

**How to understand which type of issue is it?**

  1. **In the case of SMS pumping, there is typically a sudden increase in SMS traffic, particularly OTP (One-Time Password) or ARN (Authorization Code) traffic. Despite the increase in volume, the traffic profile remains consistent, with the same content being sent repeatedly.**

  2. **On the other hand, in instances of compromised authentication IDs or tokens, random traffic starts to appear. This traffic is not consistent and may vary in content.**

**Checklist**

  * We should pull out the MDRs / CDRs for the mentioned period (the timespan of the breach).

  * Analyze the traffic triggered from the account by viewing the message content.

  * If the traffic triggered is in line with their usual message content, then it is the issue of SMS pumping.

**Scenarios**| **What is?**| **Template**| **What to do?**| **Reference
Articles**| **Reference Jira**  
---|---|---|---|---|---  
**SMS Pumping**|  SMS pumping is also referred to as traffic pumping or
artificially inflated traffic (AIT). In this type of telecom fraud, bad actors
use automated systems to trigger sharp spikes in traffic toward numbers they
own and reap a share of the charges generated|  _We should also provide the IP
addresses from which the messages were triggered so that they are aware that
the messages were triggered from their IP itself. We can get the IP from the_
_Quicksight dashboard_ _or we can get them from DevOps Team as well.
__________________________________________________Hello Team,__Greetings for
the day!__Upon reviewing the recent activity on your Plivo account, we've
noticed some irregularities that require your attention. Our team has
validated the details and confirmed that there hasn't been a breach of your
account. However, it appears that your website may be susceptible to SMS
pumping.__To address this issue and prevent further misuse, we recommend
implementing safeguards on your website form where mobile numbers are
requested. You can find detailed instructions on how to safeguard your website
from SMS pumping in_ _this blog post_ _.__Additionally, it's important to note
that customers will still be charged for any messages triggered, but through
the provided feature, customers will be able to set a cap on the maximum auto-
recharge in a day or week.__To further enhance security, we suggest taking the
following actions:_

  * _Enable fraud shield**< <Hyper Link>>**_
  * _Set recharge limit**< <Hyper Link>>**_

_You can find detailed instructions on how to use these features in our_ _FAQs section_ _.__Please let me know if there is anything I can assist you with further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _SMS pumping issue_  
**Account Breach**|  Customer complains about his account was
hacked/compromised and unauthorized calls and messages were triggered from
his/her account which resulted in a loss of credit/money and requesting for a
refund.| _Whenever Account Breach is reported, we should initially send the
response to the customers to let them know how to secure their account at the
earliest :__We should also provide the IP addresses from which the
messages/calls were triggered and the login IP 's, We can get the IP from the
__Quicksight dashboard_ _or we can get them from DevOps Team as well.
____________________________________________________Hi Team,_  
_Greetings from Plivo Support!__We have received your request and understand
your account has been breached.__We recommend you use Fraud Shield to help
curb the risk of SMS fraud, such as_ _SMS pumping_ _and_ _account token
takeover_ _. Fraud Shield offers two primary features that operate at the
destination country level: Geo Permissions and Fraud Thresholds._  
_ _  
_Geo Permissions allows you to control the countries to which your SMS traffic
is sent. We 'll block (and not charge for) any messages that are intended for
countries not included in your destination list._  
_ _  
_Fraud Thresholds can be enabled for countries on your designation list. It 's
a limit of how many messages can be set per hour to the countries that you
have approved. This control allows you to take corrective action if the
threshold is breached.__We recommend that you secure your Plivo account
immediately by taking the following steps:_

  * _Change your Plivo Auth Token:__Generate Auth Token_
  *  _Change your login password:__Reset Password_
  *  _Enable two-factor authentication (If not done already):__Profile Settings_
  *  _Restrict your geo permissions to countries that you want to send traffic to:__SMS Geo Permissions_
  *  _Disable voice functionality: Please let us know if you don't want to use voice so we can disable it altogether **(post confirmation from the customer)**._

__We also strongly recommend the below:__

  * _Plivo sends recharge alerts in real-time. If you find any unusual recharge activity, please act on any such alerts immediately._
  * _For SMS, manage your geo permissions_ _here_
  *  _For Voice, manage your geo permissions_ _here_
  *  _Secure your Plivo Auth Token from any public and client-side systems._
  * _Change the auth_token every time an employee with access to the auth_token leaves the company (if applicable)._

_If you have any questions or need further assistance, please feel free to
reach out to our customer support team.__Thank you for your attention to this
matter.___________________________________________________|

  1. We should pull the MDR logs and carefully consider that the account is breached and it is not a case of SMS pumping.
  2. We should be raising a JIRA with the relevant data on the FPT board tagging Rupam and Rajalekshmy.
  3. The below things should be present on the JIRA : 

  * MDR / CDR logs for the duration of the breach.
  * Message content if it is MDR.
  * Total charges incurred during the breach.
  * Email ID and Auth ID.

4\. After investigating the concern, Rupam shall either approve/deny the
refund request on the JIRA and we can let the customers know
accordingly.**_Feature Release_** :The Product Team has now rolled out a new
feature in the console under Payment Settings where the customers can
configure the account balance alerts to minimize the risk of service hindrance
due to low credit.  
The same can be done from the console _here_. We should always encourage customers to set that up.| | _Account Breach issue_  
  
                 

**Point of Contacts**

**and**** _Rajalekshmy Mahadevan_****and all JIRAs should be created on the
FPT board and tag the Finance Team and the respective PMs on the JIRA.**

**Legacy Confluence Articles** :

Account compromised - Reported by the customer

","support receives queries customers report accounts breached. **below two different types scenarios:** 1. **sms pumping issue** 2. **account compromised** **how understand type issue it?** 1. **in case sms pumping, typically sudden increase sms traffic, particularly otp (one-time password) arn (authorization code) traffic. despite increase volume, traffic profile remains consistent, content sent repeatedly.** 2. **on hand, instances compromised authentication ids tokens, random traffic starts appear. traffic consistent may vary content.** **checklist** * pull mdrs / cdrs mentioned period (the timespan breach). * analyze traffic triggered account viewing message content. * traffic triggered line usual message content, issue sms pumping. **scenarios**| **what is?**| **template**| **what do?**| **reference articles**| **reference jira** ---|---|---|---|---|--- **sms pumping**| sms pumping also referred traffic pumping artificially inflated traffic (ait). type telecom fraud, bad actors use automated systems trigger sharp spikes traffic toward numbers reap share charges generated| _we also provide ip addresses messages triggered aware messages triggered ip itself. get ip the_ _quicksight dashboard_ _or get devops team well. __________________________________________________hello team,__greetings day!__upon reviewing recent activity plivo account, we've noticed irregularities require attention. team validated details confirmed breach account. however, appears website may susceptible sms pumping.__to address issue prevent misuse, recommend implementing safeguards website form mobile numbers requested. find detailed instructions safeguard website sms pumping in_ _this blog post_ _.__additionally, important note customers still charged messages triggered, provided feature, customers able set cap maximum auto- recharge day week.__to enhance security, suggest taking following actions:_ * _enable fraud shield**< >**_ * _set recharge limit**< >**_ _you find detailed instructions use features our_ _faqs section_ _.__please let know anything assist further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _sms pumping issue_ **account breach**| customer complains account hacked/compromised unauthorized calls messages triggered his/her account resulted loss credit/money requesting refund.| _whenever account breach reported, initially send response customers let know secure account earliest :__we also provide ip addresses messages/calls triggered login ip 's, get ip __quicksight dashboard_ _or get devops team well. ____________________________________________________hi team,_ _greetings plivo support!__we received request understand account breached.__we recommend use fraud shield help curb risk sms fraud, as_ _sms pumping_ _and_ _account token takeover_ _. fraud shield offers two primary features operate destination country level: geo permissions fraud thresholds._ _ _ _geo permissions allows control countries sms traffic sent. 'll block (and charge for) messages intended countries included destination list._ _ _ _fraud thresholds enabled countries designation list. 's limit many messages set per hour countries approved. control allows take corrective action threshold breached.__we recommend secure plivo account immediately taking following steps:_ * _change plivo auth token:__generate auth token_ * _change login password:__reset password_ * _enable two-factor authentication (if done already):__profile settings_ * _restrict geo permissions countries want send traffic to:__sms geo permissions_ * _disable voice functionality: please let us know want use voice disable altogether **(post confirmation customer)**._ __we also strongly recommend below:__ * _plivo sends recharge alerts real-time. find unusual recharge activity, please act alerts immediately._ * _for sms, manage geo permissions_ _here_ * _for voice, manage geo permissions_ _here_ * _secure plivo auth token public client-side systems._ * _change auth_token every time employee access auth_token leaves company (if applicable)._ _if questions need assistance, please feel free reach customer support team.__thank attention matter.___________________________________________________| 1. pull mdr logs carefully consider account breached case sms pumping. 2. raising jira relevant data fpt board tagging rupam rajalekshmy. 3. things present jira : * mdr / cdr logs duration breach. * message content mdr. * total charges incurred breach. * email id auth id. 4\. investigating concern, rupam shall either approve/deny refund request jira let customers know accordingly.**_feature release_** :the product team rolled new feature console payment settings customers configure account balance alerts minimize risk service hindrance due low credit. done console _here_. always encourage customers set up.| | _account breach issue_ **point contacts** **and**** _rajalekshmy mahadevan_****and jiras created fpt board tag finance team respective pms jira.** **legacy confluence articles** : account compromised - reported customer","____________________________________________________hi team,_ _greetings plivo support!__we received request understand account breached.__we recommend use fraud shield help curb risk sms fraud, as_ _sms pumping_ _and_ _account token takeover_ _. fraud shield offers two primary features operate destination country level: geo permissions fraud thresholds._ _ _ _geo permissions allows control countries sms traffic sent."
3711140012,Account Breached/Compromised Process,"Support receives queries where the customers report that their accounts are
breached.  
  
**Below are the two different types of scenarios:**

  1. **SMS Pumping Issue**

  2. **Account Compromised**  

**How to understand which type of issue is it?**

  1. **In the case of SMS pumping, there is typically a sudden increase in SMS traffic, particularly OTP (One-Time Password) or ARN (Authorization Code) traffic. Despite the increase in volume, the traffic profile remains consistent, with the same content being sent repeatedly.**

  2. **On the other hand, in instances of compromised authentication IDs or tokens, random traffic starts to appear. This traffic is not consistent and may vary in content.**

**Checklist**

  * We should pull out the MDRs / CDRs for the mentioned period (the timespan of the breach).

  * Analyze the traffic triggered from the account by viewing the message content.

  * If the traffic triggered is in line with their usual message content, then it is the issue of SMS pumping.

**Scenarios**| **What is?**| **Template**| **What to do?**| **Reference
Articles**| **Reference Jira**  
---|---|---|---|---|---  
**SMS Pumping**|  SMS pumping is also referred to as traffic pumping or
artificially inflated traffic (AIT). In this type of telecom fraud, bad actors
use automated systems to trigger sharp spikes in traffic toward numbers they
own and reap a share of the charges generated|  _We should also provide the IP
addresses from which the messages were triggered so that they are aware that
the messages were triggered from their IP itself. We can get the IP from the_
_Quicksight dashboard_ _or we can get them from DevOps Team as well.
__________________________________________________Hello Team,__Greetings for
the day!__Upon reviewing the recent activity on your Plivo account, we've
noticed some irregularities that require your attention. Our team has
validated the details and confirmed that there hasn't been a breach of your
account. However, it appears that your website may be susceptible to SMS
pumping.__To address this issue and prevent further misuse, we recommend
implementing safeguards on your website form where mobile numbers are
requested. You can find detailed instructions on how to safeguard your website
from SMS pumping in_ _this blog post_ _.__Additionally, it's important to note
that customers will still be charged for any messages triggered, but through
the provided feature, customers will be able to set a cap on the maximum auto-
recharge in a day or week.__To further enhance security, we suggest taking the
following actions:_

  * _Enable fraud shield**< <Hyper Link>>**_
  * _Set recharge limit**< <Hyper Link>>**_

_You can find detailed instructions on how to use these features in our_ _FAQs section_ _.__Please let me know if there is anything I can assist you with further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _SMS pumping issue_  
**Account Breach**|  Customer complains about his account was
hacked/compromised and unauthorized calls and messages were triggered from
his/her account which resulted in a loss of credit/money and requesting for a
refund.| _Whenever Account Breach is reported, we should initially send the
response to the customers to let them know how to secure their account at the
earliest :__We should also provide the IP addresses from which the
messages/calls were triggered and the login IP 's, We can get the IP from the
__Quicksight dashboard_ _or we can get them from DevOps Team as well.
____________________________________________________Hi Team,_  
_Greetings from Plivo Support!__We have received your request and understand
your account has been breached.__We recommend you use Fraud Shield to help
curb the risk of SMS fraud, such as_ _SMS pumping_ _and_ _account token
takeover_ _. Fraud Shield offers two primary features that operate at the
destination country level: Geo Permissions and Fraud Thresholds._  
_ _  
_Geo Permissions allows you to control the countries to which your SMS traffic
is sent. We 'll block (and not charge for) any messages that are intended for
countries not included in your destination list._  
_ _  
_Fraud Thresholds can be enabled for countries on your designation list. It 's
a limit of how many messages can be set per hour to the countries that you
have approved. This control allows you to take corrective action if the
threshold is breached.__We recommend that you secure your Plivo account
immediately by taking the following steps:_

  * _Change your Plivo Auth Token:__Generate Auth Token_
  *  _Change your login password:__Reset Password_
  *  _Enable two-factor authentication (If not done already):__Profile Settings_
  *  _Restrict your geo permissions to countries that you want to send traffic to:__SMS Geo Permissions_
  *  _Disable voice functionality: Please let us know if you don't want to use voice so we can disable it altogether **(post confirmation from the customer)**._

__We also strongly recommend the below:__

  * _Plivo sends recharge alerts in real-time. If you find any unusual recharge activity, please act on any such alerts immediately._
  * _For SMS, manage your geo permissions_ _here_
  *  _For Voice, manage your geo permissions_ _here_
  *  _Secure your Plivo Auth Token from any public and client-side systems._
  * _Change the auth_token every time an employee with access to the auth_token leaves the company (if applicable)._

_If you have any questions or need further assistance, please feel free to
reach out to our customer support team.__Thank you for your attention to this
matter.___________________________________________________|

  1. We should pull the MDR logs and carefully consider that the account is breached and it is not a case of SMS pumping.
  2. We should be raising a JIRA with the relevant data on the FPT board tagging Rupam and Rajalekshmy.
  3. The below things should be present on the JIRA : 

  * MDR / CDR logs for the duration of the breach.
  * Message content if it is MDR.
  * Total charges incurred during the breach.
  * Email ID and Auth ID.

4\. After investigating the concern, Rupam shall either approve/deny the
refund request on the JIRA and we can let the customers know
accordingly.**_Feature Release_** :The Product Team has now rolled out a new
feature in the console under Payment Settings where the customers can
configure the account balance alerts to minimize the risk of service hindrance
due to low credit.  
The same can be done from the console _here_. We should always encourage customers to set that up.| | _Account Breach issue_  
  
                 

**Point of Contacts**

**and**** _Rajalekshmy Mahadevan_****and all JIRAs should be created on the
FPT board and tag the Finance Team and the respective PMs on the JIRA.**

**Legacy Confluence Articles** :

Account compromised - Reported by the customer

","support receives queries customers report accounts breached. **below two different types scenarios:** 1. **sms pumping issue** 2. **account compromised** **how understand type issue it?** 1. **in case sms pumping, typically sudden increase sms traffic, particularly otp (one-time password) arn (authorization code) traffic. despite increase volume, traffic profile remains consistent, content sent repeatedly.** 2. **on hand, instances compromised authentication ids tokens, random traffic starts appear. traffic consistent may vary content.** **checklist** * pull mdrs / cdrs mentioned period (the timespan breach). * analyze traffic triggered account viewing message content. * traffic triggered line usual message content, issue sms pumping. **scenarios**| **what is?**| **template**| **what do?**| **reference articles**| **reference jira** ---|---|---|---|---|--- **sms pumping**| sms pumping also referred traffic pumping artificially inflated traffic (ait). type telecom fraud, bad actors use automated systems trigger sharp spikes traffic toward numbers reap share charges generated| _we also provide ip addresses messages triggered aware messages triggered ip itself. get ip the_ _quicksight dashboard_ _or get devops team well. __________________________________________________hello team,__greetings day!__upon reviewing recent activity plivo account, we've noticed irregularities require attention. team validated details confirmed breach account. however, appears website may susceptible sms pumping.__to address issue prevent misuse, recommend implementing safeguards website form mobile numbers requested. find detailed instructions safeguard website sms pumping in_ _this blog post_ _.__additionally, important note customers still charged messages triggered, provided feature, customers able set cap maximum auto- recharge day week.__to enhance security, suggest taking following actions:_ * _enable fraud shield**< >**_ * _set recharge limit**< >**_ _you find detailed instructions use features our_ _faqs section_ _.__please let know anything assist further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _sms pumping issue_ **account breach**| customer complains account hacked/compromised unauthorized calls messages triggered his/her account resulted loss credit/money requesting refund.| _whenever account breach reported, initially send response customers let know secure account earliest :__we also provide ip addresses messages/calls triggered login ip 's, get ip __quicksight dashboard_ _or get devops team well. ____________________________________________________hi team,_ _greetings plivo support!__we received request understand account breached.__we recommend use fraud shield help curb risk sms fraud, as_ _sms pumping_ _and_ _account token takeover_ _. fraud shield offers two primary features operate destination country level: geo permissions fraud thresholds._ _ _ _geo permissions allows control countries sms traffic sent. 'll block (and charge for) messages intended countries included destination list._ _ _ _fraud thresholds enabled countries designation list. 's limit many messages set per hour countries approved. control allows take corrective action threshold breached.__we recommend secure plivo account immediately taking following steps:_ * _change plivo auth token:__generate auth token_ * _change login password:__reset password_ * _enable two-factor authentication (if done already):__profile settings_ * _restrict geo permissions countries want send traffic to:__sms geo permissions_ * _disable voice functionality: please let us know want use voice disable altogether **(post confirmation customer)**._ __we also strongly recommend below:__ * _plivo sends recharge alerts real-time. find unusual recharge activity, please act alerts immediately._ * _for sms, manage geo permissions_ _here_ * _for voice, manage geo permissions_ _here_ * _secure plivo auth token public client-side systems._ * _change auth_token every time employee access auth_token leaves company (if applicable)._ _if questions need assistance, please feel free reach customer support team.__thank attention matter.___________________________________________________| 1. pull mdr logs carefully consider account breached case sms pumping. 2. raising jira relevant data fpt board tagging rupam rajalekshmy. 3. things present jira : * mdr / cdr logs duration breach. * message content mdr. * total charges incurred breach. * email id auth id. 4\. investigating concern, rupam shall either approve/deny refund request jira let customers know accordingly.**_feature release_** :the product team rolled new feature console payment settings customers configure account balance alerts minimize risk service hindrance due low credit. done console _here_. always encourage customers set up.| | _account breach issue_ **point contacts** **and**** _rajalekshmy mahadevan_****and jiras created fpt board tag finance team respective pms jira.** **legacy confluence articles** : account compromised - reported customer",'ll block (and charge for) messages intended countries included destination list._ _ _ _fraud thresholds enabled countries designation list. 's limit many messages set per hour countries approved.
3711140012,Account Breached/Compromised Process,"Support receives queries where the customers report that their accounts are
breached.  
  
**Below are the two different types of scenarios:**

  1. **SMS Pumping Issue**

  2. **Account Compromised**  

**How to understand which type of issue is it?**

  1. **In the case of SMS pumping, there is typically a sudden increase in SMS traffic, particularly OTP (One-Time Password) or ARN (Authorization Code) traffic. Despite the increase in volume, the traffic profile remains consistent, with the same content being sent repeatedly.**

  2. **On the other hand, in instances of compromised authentication IDs or tokens, random traffic starts to appear. This traffic is not consistent and may vary in content.**

**Checklist**

  * We should pull out the MDRs / CDRs for the mentioned period (the timespan of the breach).

  * Analyze the traffic triggered from the account by viewing the message content.

  * If the traffic triggered is in line with their usual message content, then it is the issue of SMS pumping.

**Scenarios**| **What is?**| **Template**| **What to do?**| **Reference
Articles**| **Reference Jira**  
---|---|---|---|---|---  
**SMS Pumping**|  SMS pumping is also referred to as traffic pumping or
artificially inflated traffic (AIT). In this type of telecom fraud, bad actors
use automated systems to trigger sharp spikes in traffic toward numbers they
own and reap a share of the charges generated|  _We should also provide the IP
addresses from which the messages were triggered so that they are aware that
the messages were triggered from their IP itself. We can get the IP from the_
_Quicksight dashboard_ _or we can get them from DevOps Team as well.
__________________________________________________Hello Team,__Greetings for
the day!__Upon reviewing the recent activity on your Plivo account, we've
noticed some irregularities that require your attention. Our team has
validated the details and confirmed that there hasn't been a breach of your
account. However, it appears that your website may be susceptible to SMS
pumping.__To address this issue and prevent further misuse, we recommend
implementing safeguards on your website form where mobile numbers are
requested. You can find detailed instructions on how to safeguard your website
from SMS pumping in_ _this blog post_ _.__Additionally, it's important to note
that customers will still be charged for any messages triggered, but through
the provided feature, customers will be able to set a cap on the maximum auto-
recharge in a day or week.__To further enhance security, we suggest taking the
following actions:_

  * _Enable fraud shield**< <Hyper Link>>**_
  * _Set recharge limit**< <Hyper Link>>**_

_You can find detailed instructions on how to use these features in our_ _FAQs section_ _.__Please let me know if there is anything I can assist you with further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _SMS pumping issue_  
**Account Breach**|  Customer complains about his account was
hacked/compromised and unauthorized calls and messages were triggered from
his/her account which resulted in a loss of credit/money and requesting for a
refund.| _Whenever Account Breach is reported, we should initially send the
response to the customers to let them know how to secure their account at the
earliest :__We should also provide the IP addresses from which the
messages/calls were triggered and the login IP 's, We can get the IP from the
__Quicksight dashboard_ _or we can get them from DevOps Team as well.
____________________________________________________Hi Team,_  
_Greetings from Plivo Support!__We have received your request and understand
your account has been breached.__We recommend you use Fraud Shield to help
curb the risk of SMS fraud, such as_ _SMS pumping_ _and_ _account token
takeover_ _. Fraud Shield offers two primary features that operate at the
destination country level: Geo Permissions and Fraud Thresholds._  
_ _  
_Geo Permissions allows you to control the countries to which your SMS traffic
is sent. We 'll block (and not charge for) any messages that are intended for
countries not included in your destination list._  
_ _  
_Fraud Thresholds can be enabled for countries on your designation list. It 's
a limit of how many messages can be set per hour to the countries that you
have approved. This control allows you to take corrective action if the
threshold is breached.__We recommend that you secure your Plivo account
immediately by taking the following steps:_

  * _Change your Plivo Auth Token:__Generate Auth Token_
  *  _Change your login password:__Reset Password_
  *  _Enable two-factor authentication (If not done already):__Profile Settings_
  *  _Restrict your geo permissions to countries that you want to send traffic to:__SMS Geo Permissions_
  *  _Disable voice functionality: Please let us know if you don't want to use voice so we can disable it altogether **(post confirmation from the customer)**._

__We also strongly recommend the below:__

  * _Plivo sends recharge alerts in real-time. If you find any unusual recharge activity, please act on any such alerts immediately._
  * _For SMS, manage your geo permissions_ _here_
  *  _For Voice, manage your geo permissions_ _here_
  *  _Secure your Plivo Auth Token from any public and client-side systems._
  * _Change the auth_token every time an employee with access to the auth_token leaves the company (if applicable)._

_If you have any questions or need further assistance, please feel free to
reach out to our customer support team.__Thank you for your attention to this
matter.___________________________________________________|

  1. We should pull the MDR logs and carefully consider that the account is breached and it is not a case of SMS pumping.
  2. We should be raising a JIRA with the relevant data on the FPT board tagging Rupam and Rajalekshmy.
  3. The below things should be present on the JIRA : 

  * MDR / CDR logs for the duration of the breach.
  * Message content if it is MDR.
  * Total charges incurred during the breach.
  * Email ID and Auth ID.

4\. After investigating the concern, Rupam shall either approve/deny the
refund request on the JIRA and we can let the customers know
accordingly.**_Feature Release_** :The Product Team has now rolled out a new
feature in the console under Payment Settings where the customers can
configure the account balance alerts to minimize the risk of service hindrance
due to low credit.  
The same can be done from the console _here_. We should always encourage customers to set that up.| | _Account Breach issue_  
  
                 

**Point of Contacts**

**and**** _Rajalekshmy Mahadevan_****and all JIRAs should be created on the
FPT board and tag the Finance Team and the respective PMs on the JIRA.**

**Legacy Confluence Articles** :

Account compromised - Reported by the customer

","support receives queries customers report accounts breached. **below two different types scenarios:** 1. **sms pumping issue** 2. **account compromised** **how understand type issue it?** 1. **in case sms pumping, typically sudden increase sms traffic, particularly otp (one-time password) arn (authorization code) traffic. despite increase volume, traffic profile remains consistent, content sent repeatedly.** 2. **on hand, instances compromised authentication ids tokens, random traffic starts appear. traffic consistent may vary content.** **checklist** * pull mdrs / cdrs mentioned period (the timespan breach). * analyze traffic triggered account viewing message content. * traffic triggered line usual message content, issue sms pumping. **scenarios**| **what is?**| **template**| **what do?**| **reference articles**| **reference jira** ---|---|---|---|---|--- **sms pumping**| sms pumping also referred traffic pumping artificially inflated traffic (ait). type telecom fraud, bad actors use automated systems trigger sharp spikes traffic toward numbers reap share charges generated| _we also provide ip addresses messages triggered aware messages triggered ip itself. get ip the_ _quicksight dashboard_ _or get devops team well. __________________________________________________hello team,__greetings day!__upon reviewing recent activity plivo account, we've noticed irregularities require attention. team validated details confirmed breach account. however, appears website may susceptible sms pumping.__to address issue prevent misuse, recommend implementing safeguards website form mobile numbers requested. find detailed instructions safeguard website sms pumping in_ _this blog post_ _.__additionally, important note customers still charged messages triggered, provided feature, customers able set cap maximum auto- recharge day week.__to enhance security, suggest taking following actions:_ * _enable fraud shield**< >**_ * _set recharge limit**< >**_ _you find detailed instructions use features our_ _faqs section_ _.__please let know anything assist further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _sms pumping issue_ **account breach**| customer complains account hacked/compromised unauthorized calls messages triggered his/her account resulted loss credit/money requesting refund.| _whenever account breach reported, initially send response customers let know secure account earliest :__we also provide ip addresses messages/calls triggered login ip 's, get ip __quicksight dashboard_ _or get devops team well. ____________________________________________________hi team,_ _greetings plivo support!__we received request understand account breached.__we recommend use fraud shield help curb risk sms fraud, as_ _sms pumping_ _and_ _account token takeover_ _. fraud shield offers two primary features operate destination country level: geo permissions fraud thresholds._ _ _ _geo permissions allows control countries sms traffic sent. 'll block (and charge for) messages intended countries included destination list._ _ _ _fraud thresholds enabled countries designation list. 's limit many messages set per hour countries approved. control allows take corrective action threshold breached.__we recommend secure plivo account immediately taking following steps:_ * _change plivo auth token:__generate auth token_ * _change login password:__reset password_ * _enable two-factor authentication (if done already):__profile settings_ * _restrict geo permissions countries want send traffic to:__sms geo permissions_ * _disable voice functionality: please let us know want use voice disable altogether **(post confirmation customer)**._ __we also strongly recommend below:__ * _plivo sends recharge alerts real-time. find unusual recharge activity, please act alerts immediately._ * _for sms, manage geo permissions_ _here_ * _for voice, manage geo permissions_ _here_ * _secure plivo auth token public client-side systems._ * _change auth_token every time employee access auth_token leaves company (if applicable)._ _if questions need assistance, please feel free reach customer support team.__thank attention matter.___________________________________________________| 1. pull mdr logs carefully consider account breached case sms pumping. 2. raising jira relevant data fpt board tagging rupam rajalekshmy. 3. things present jira : * mdr / cdr logs duration breach. * message content mdr. * total charges incurred breach. * email id auth id. 4\. investigating concern, rupam shall either approve/deny refund request jira let customers know accordingly.**_feature release_** :the product team rolled new feature console payment settings customers configure account balance alerts minimize risk service hindrance due low credit. done console _here_. always encourage customers set up.| | _account breach issue_ **point contacts** **and**** _rajalekshmy mahadevan_****and jiras created fpt board tag finance team respective pms jira.** **legacy confluence articles** : account compromised - reported customer",control allows take corrective action threshold breached.__we recommend secure plivo account immediately taking following steps:_ * _change plivo auth token:__generate auth token_ * _change login password:__reset password_ * _enable two-factor authentication (if done already):__profile settings_ * _restrict geo permissions countries want send traffic to:__sms geo permissions_ * _disable voice functionality: please let us know want use voice disable altogether **(post confirmation customer)**._ __we also strongly recommend below:__ * _plivo sends recharge alerts real-time.
3711140012,Account Breached/Compromised Process,"Support receives queries where the customers report that their accounts are
breached.  
  
**Below are the two different types of scenarios:**

  1. **SMS Pumping Issue**

  2. **Account Compromised**  

**How to understand which type of issue is it?**

  1. **In the case of SMS pumping, there is typically a sudden increase in SMS traffic, particularly OTP (One-Time Password) or ARN (Authorization Code) traffic. Despite the increase in volume, the traffic profile remains consistent, with the same content being sent repeatedly.**

  2. **On the other hand, in instances of compromised authentication IDs or tokens, random traffic starts to appear. This traffic is not consistent and may vary in content.**

**Checklist**

  * We should pull out the MDRs / CDRs for the mentioned period (the timespan of the breach).

  * Analyze the traffic triggered from the account by viewing the message content.

  * If the traffic triggered is in line with their usual message content, then it is the issue of SMS pumping.

**Scenarios**| **What is?**| **Template**| **What to do?**| **Reference
Articles**| **Reference Jira**  
---|---|---|---|---|---  
**SMS Pumping**|  SMS pumping is also referred to as traffic pumping or
artificially inflated traffic (AIT). In this type of telecom fraud, bad actors
use automated systems to trigger sharp spikes in traffic toward numbers they
own and reap a share of the charges generated|  _We should also provide the IP
addresses from which the messages were triggered so that they are aware that
the messages were triggered from their IP itself. We can get the IP from the_
_Quicksight dashboard_ _or we can get them from DevOps Team as well.
__________________________________________________Hello Team,__Greetings for
the day!__Upon reviewing the recent activity on your Plivo account, we've
noticed some irregularities that require your attention. Our team has
validated the details and confirmed that there hasn't been a breach of your
account. However, it appears that your website may be susceptible to SMS
pumping.__To address this issue and prevent further misuse, we recommend
implementing safeguards on your website form where mobile numbers are
requested. You can find detailed instructions on how to safeguard your website
from SMS pumping in_ _this blog post_ _.__Additionally, it's important to note
that customers will still be charged for any messages triggered, but through
the provided feature, customers will be able to set a cap on the maximum auto-
recharge in a day or week.__To further enhance security, we suggest taking the
following actions:_

  * _Enable fraud shield**< <Hyper Link>>**_
  * _Set recharge limit**< <Hyper Link>>**_

_You can find detailed instructions on how to use these features in our_ _FAQs section_ _.__Please let me know if there is anything I can assist you with further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _SMS pumping issue_  
**Account Breach**|  Customer complains about his account was
hacked/compromised and unauthorized calls and messages were triggered from
his/her account which resulted in a loss of credit/money and requesting for a
refund.| _Whenever Account Breach is reported, we should initially send the
response to the customers to let them know how to secure their account at the
earliest :__We should also provide the IP addresses from which the
messages/calls were triggered and the login IP 's, We can get the IP from the
__Quicksight dashboard_ _or we can get them from DevOps Team as well.
____________________________________________________Hi Team,_  
_Greetings from Plivo Support!__We have received your request and understand
your account has been breached.__We recommend you use Fraud Shield to help
curb the risk of SMS fraud, such as_ _SMS pumping_ _and_ _account token
takeover_ _. Fraud Shield offers two primary features that operate at the
destination country level: Geo Permissions and Fraud Thresholds._  
_ _  
_Geo Permissions allows you to control the countries to which your SMS traffic
is sent. We 'll block (and not charge for) any messages that are intended for
countries not included in your destination list._  
_ _  
_Fraud Thresholds can be enabled for countries on your designation list. It 's
a limit of how many messages can be set per hour to the countries that you
have approved. This control allows you to take corrective action if the
threshold is breached.__We recommend that you secure your Plivo account
immediately by taking the following steps:_

  * _Change your Plivo Auth Token:__Generate Auth Token_
  *  _Change your login password:__Reset Password_
  *  _Enable two-factor authentication (If not done already):__Profile Settings_
  *  _Restrict your geo permissions to countries that you want to send traffic to:__SMS Geo Permissions_
  *  _Disable voice functionality: Please let us know if you don't want to use voice so we can disable it altogether **(post confirmation from the customer)**._

__We also strongly recommend the below:__

  * _Plivo sends recharge alerts in real-time. If you find any unusual recharge activity, please act on any such alerts immediately._
  * _For SMS, manage your geo permissions_ _here_
  *  _For Voice, manage your geo permissions_ _here_
  *  _Secure your Plivo Auth Token from any public and client-side systems._
  * _Change the auth_token every time an employee with access to the auth_token leaves the company (if applicable)._

_If you have any questions or need further assistance, please feel free to
reach out to our customer support team.__Thank you for your attention to this
matter.___________________________________________________|

  1. We should pull the MDR logs and carefully consider that the account is breached and it is not a case of SMS pumping.
  2. We should be raising a JIRA with the relevant data on the FPT board tagging Rupam and Rajalekshmy.
  3. The below things should be present on the JIRA : 

  * MDR / CDR logs for the duration of the breach.
  * Message content if it is MDR.
  * Total charges incurred during the breach.
  * Email ID and Auth ID.

4\. After investigating the concern, Rupam shall either approve/deny the
refund request on the JIRA and we can let the customers know
accordingly.**_Feature Release_** :The Product Team has now rolled out a new
feature in the console under Payment Settings where the customers can
configure the account balance alerts to minimize the risk of service hindrance
due to low credit.  
The same can be done from the console _here_. We should always encourage customers to set that up.| | _Account Breach issue_  
  
                 

**Point of Contacts**

**and**** _Rajalekshmy Mahadevan_****and all JIRAs should be created on the
FPT board and tag the Finance Team and the respective PMs on the JIRA.**

**Legacy Confluence Articles** :

Account compromised - Reported by the customer

","support receives queries customers report accounts breached. **below two different types scenarios:** 1. **sms pumping issue** 2. **account compromised** **how understand type issue it?** 1. **in case sms pumping, typically sudden increase sms traffic, particularly otp (one-time password) arn (authorization code) traffic. despite increase volume, traffic profile remains consistent, content sent repeatedly.** 2. **on hand, instances compromised authentication ids tokens, random traffic starts appear. traffic consistent may vary content.** **checklist** * pull mdrs / cdrs mentioned period (the timespan breach). * analyze traffic triggered account viewing message content. * traffic triggered line usual message content, issue sms pumping. **scenarios**| **what is?**| **template**| **what do?**| **reference articles**| **reference jira** ---|---|---|---|---|--- **sms pumping**| sms pumping also referred traffic pumping artificially inflated traffic (ait). type telecom fraud, bad actors use automated systems trigger sharp spikes traffic toward numbers reap share charges generated| _we also provide ip addresses messages triggered aware messages triggered ip itself. get ip the_ _quicksight dashboard_ _or get devops team well. __________________________________________________hello team,__greetings day!__upon reviewing recent activity plivo account, we've noticed irregularities require attention. team validated details confirmed breach account. however, appears website may susceptible sms pumping.__to address issue prevent misuse, recommend implementing safeguards website form mobile numbers requested. find detailed instructions safeguard website sms pumping in_ _this blog post_ _.__additionally, important note customers still charged messages triggered, provided feature, customers able set cap maximum auto- recharge day week.__to enhance security, suggest taking following actions:_ * _enable fraud shield**< >**_ * _set recharge limit**< >**_ _you find detailed instructions use features our_ _faqs section_ _.__please let know anything assist further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _sms pumping issue_ **account breach**| customer complains account hacked/compromised unauthorized calls messages triggered his/her account resulted loss credit/money requesting refund.| _whenever account breach reported, initially send response customers let know secure account earliest :__we also provide ip addresses messages/calls triggered login ip 's, get ip __quicksight dashboard_ _or get devops team well. ____________________________________________________hi team,_ _greetings plivo support!__we received request understand account breached.__we recommend use fraud shield help curb risk sms fraud, as_ _sms pumping_ _and_ _account token takeover_ _. fraud shield offers two primary features operate destination country level: geo permissions fraud thresholds._ _ _ _geo permissions allows control countries sms traffic sent. 'll block (and charge for) messages intended countries included destination list._ _ _ _fraud thresholds enabled countries designation list. 's limit many messages set per hour countries approved. control allows take corrective action threshold breached.__we recommend secure plivo account immediately taking following steps:_ * _change plivo auth token:__generate auth token_ * _change login password:__reset password_ * _enable two-factor authentication (if done already):__profile settings_ * _restrict geo permissions countries want send traffic to:__sms geo permissions_ * _disable voice functionality: please let us know want use voice disable altogether **(post confirmation customer)**._ __we also strongly recommend below:__ * _plivo sends recharge alerts real-time. find unusual recharge activity, please act alerts immediately._ * _for sms, manage geo permissions_ _here_ * _for voice, manage geo permissions_ _here_ * _secure plivo auth token public client-side systems._ * _change auth_token every time employee access auth_token leaves company (if applicable)._ _if questions need assistance, please feel free reach customer support team.__thank attention matter.___________________________________________________| 1. pull mdr logs carefully consider account breached case sms pumping. 2. raising jira relevant data fpt board tagging rupam rajalekshmy. 3. things present jira : * mdr / cdr logs duration breach. * message content mdr. * total charges incurred breach. * email id auth id. 4\. investigating concern, rupam shall either approve/deny refund request jira let customers know accordingly.**_feature release_** :the product team rolled new feature console payment settings customers configure account balance alerts minimize risk service hindrance due low credit. done console _here_. always encourage customers set up.| | _account breach issue_ **point contacts** **and**** _rajalekshmy mahadevan_****and jiras created fpt board tag finance team respective pms jira.** **legacy confluence articles** : account compromised - reported customer","find unusual recharge activity, please act alerts immediately._ * _for sms, manage geo permissions_ _here_ * _for voice, manage geo permissions_ _here_ * _secure plivo auth token public client-side systems._ * _change auth_token every time employee access auth_token leaves company (if applicable)._ _if questions need assistance, please feel free reach customer support team.__thank attention matter.___________________________________________________| 1. pull mdr logs carefully consider account breached case sms pumping."
3711140012,Account Breached/Compromised Process,"Support receives queries where the customers report that their accounts are
breached.  
  
**Below are the two different types of scenarios:**

  1. **SMS Pumping Issue**

  2. **Account Compromised**  

**How to understand which type of issue is it?**

  1. **In the case of SMS pumping, there is typically a sudden increase in SMS traffic, particularly OTP (One-Time Password) or ARN (Authorization Code) traffic. Despite the increase in volume, the traffic profile remains consistent, with the same content being sent repeatedly.**

  2. **On the other hand, in instances of compromised authentication IDs or tokens, random traffic starts to appear. This traffic is not consistent and may vary in content.**

**Checklist**

  * We should pull out the MDRs / CDRs for the mentioned period (the timespan of the breach).

  * Analyze the traffic triggered from the account by viewing the message content.

  * If the traffic triggered is in line with their usual message content, then it is the issue of SMS pumping.

**Scenarios**| **What is?**| **Template**| **What to do?**| **Reference
Articles**| **Reference Jira**  
---|---|---|---|---|---  
**SMS Pumping**|  SMS pumping is also referred to as traffic pumping or
artificially inflated traffic (AIT). In this type of telecom fraud, bad actors
use automated systems to trigger sharp spikes in traffic toward numbers they
own and reap a share of the charges generated|  _We should also provide the IP
addresses from which the messages were triggered so that they are aware that
the messages were triggered from their IP itself. We can get the IP from the_
_Quicksight dashboard_ _or we can get them from DevOps Team as well.
__________________________________________________Hello Team,__Greetings for
the day!__Upon reviewing the recent activity on your Plivo account, we've
noticed some irregularities that require your attention. Our team has
validated the details and confirmed that there hasn't been a breach of your
account. However, it appears that your website may be susceptible to SMS
pumping.__To address this issue and prevent further misuse, we recommend
implementing safeguards on your website form where mobile numbers are
requested. You can find detailed instructions on how to safeguard your website
from SMS pumping in_ _this blog post_ _.__Additionally, it's important to note
that customers will still be charged for any messages triggered, but through
the provided feature, customers will be able to set a cap on the maximum auto-
recharge in a day or week.__To further enhance security, we suggest taking the
following actions:_

  * _Enable fraud shield**< <Hyper Link>>**_
  * _Set recharge limit**< <Hyper Link>>**_

_You can find detailed instructions on how to use these features in our_ _FAQs section_ _.__Please let me know if there is anything I can assist you with further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _SMS pumping issue_  
**Account Breach**|  Customer complains about his account was
hacked/compromised and unauthorized calls and messages were triggered from
his/her account which resulted in a loss of credit/money and requesting for a
refund.| _Whenever Account Breach is reported, we should initially send the
response to the customers to let them know how to secure their account at the
earliest :__We should also provide the IP addresses from which the
messages/calls were triggered and the login IP 's, We can get the IP from the
__Quicksight dashboard_ _or we can get them from DevOps Team as well.
____________________________________________________Hi Team,_  
_Greetings from Plivo Support!__We have received your request and understand
your account has been breached.__We recommend you use Fraud Shield to help
curb the risk of SMS fraud, such as_ _SMS pumping_ _and_ _account token
takeover_ _. Fraud Shield offers two primary features that operate at the
destination country level: Geo Permissions and Fraud Thresholds._  
_ _  
_Geo Permissions allows you to control the countries to which your SMS traffic
is sent. We 'll block (and not charge for) any messages that are intended for
countries not included in your destination list._  
_ _  
_Fraud Thresholds can be enabled for countries on your designation list. It 's
a limit of how many messages can be set per hour to the countries that you
have approved. This control allows you to take corrective action if the
threshold is breached.__We recommend that you secure your Plivo account
immediately by taking the following steps:_

  * _Change your Plivo Auth Token:__Generate Auth Token_
  *  _Change your login password:__Reset Password_
  *  _Enable two-factor authentication (If not done already):__Profile Settings_
  *  _Restrict your geo permissions to countries that you want to send traffic to:__SMS Geo Permissions_
  *  _Disable voice functionality: Please let us know if you don't want to use voice so we can disable it altogether **(post confirmation from the customer)**._

__We also strongly recommend the below:__

  * _Plivo sends recharge alerts in real-time. If you find any unusual recharge activity, please act on any such alerts immediately._
  * _For SMS, manage your geo permissions_ _here_
  *  _For Voice, manage your geo permissions_ _here_
  *  _Secure your Plivo Auth Token from any public and client-side systems._
  * _Change the auth_token every time an employee with access to the auth_token leaves the company (if applicable)._

_If you have any questions or need further assistance, please feel free to
reach out to our customer support team.__Thank you for your attention to this
matter.___________________________________________________|

  1. We should pull the MDR logs and carefully consider that the account is breached and it is not a case of SMS pumping.
  2. We should be raising a JIRA with the relevant data on the FPT board tagging Rupam and Rajalekshmy.
  3. The below things should be present on the JIRA : 

  * MDR / CDR logs for the duration of the breach.
  * Message content if it is MDR.
  * Total charges incurred during the breach.
  * Email ID and Auth ID.

4\. After investigating the concern, Rupam shall either approve/deny the
refund request on the JIRA and we can let the customers know
accordingly.**_Feature Release_** :The Product Team has now rolled out a new
feature in the console under Payment Settings where the customers can
configure the account balance alerts to minimize the risk of service hindrance
due to low credit.  
The same can be done from the console _here_. We should always encourage customers to set that up.| | _Account Breach issue_  
  
                 

**Point of Contacts**

**and**** _Rajalekshmy Mahadevan_****and all JIRAs should be created on the
FPT board and tag the Finance Team and the respective PMs on the JIRA.**

**Legacy Confluence Articles** :

Account compromised - Reported by the customer

","support receives queries customers report accounts breached. **below two different types scenarios:** 1. **sms pumping issue** 2. **account compromised** **how understand type issue it?** 1. **in case sms pumping, typically sudden increase sms traffic, particularly otp (one-time password) arn (authorization code) traffic. despite increase volume, traffic profile remains consistent, content sent repeatedly.** 2. **on hand, instances compromised authentication ids tokens, random traffic starts appear. traffic consistent may vary content.** **checklist** * pull mdrs / cdrs mentioned period (the timespan breach). * analyze traffic triggered account viewing message content. * traffic triggered line usual message content, issue sms pumping. **scenarios**| **what is?**| **template**| **what do?**| **reference articles**| **reference jira** ---|---|---|---|---|--- **sms pumping**| sms pumping also referred traffic pumping artificially inflated traffic (ait). type telecom fraud, bad actors use automated systems trigger sharp spikes traffic toward numbers reap share charges generated| _we also provide ip addresses messages triggered aware messages triggered ip itself. get ip the_ _quicksight dashboard_ _or get devops team well. __________________________________________________hello team,__greetings day!__upon reviewing recent activity plivo account, we've noticed irregularities require attention. team validated details confirmed breach account. however, appears website may susceptible sms pumping.__to address issue prevent misuse, recommend implementing safeguards website form mobile numbers requested. find detailed instructions safeguard website sms pumping in_ _this blog post_ _.__additionally, important note customers still charged messages triggered, provided feature, customers able set cap maximum auto- recharge day week.__to enhance security, suggest taking following actions:_ * _enable fraud shield**< >**_ * _set recharge limit**< >**_ _you find detailed instructions use features our_ _faqs section_ _.__please let know anything assist further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _sms pumping issue_ **account breach**| customer complains account hacked/compromised unauthorized calls messages triggered his/her account resulted loss credit/money requesting refund.| _whenever account breach reported, initially send response customers let know secure account earliest :__we also provide ip addresses messages/calls triggered login ip 's, get ip __quicksight dashboard_ _or get devops team well. ____________________________________________________hi team,_ _greetings plivo support!__we received request understand account breached.__we recommend use fraud shield help curb risk sms fraud, as_ _sms pumping_ _and_ _account token takeover_ _. fraud shield offers two primary features operate destination country level: geo permissions fraud thresholds._ _ _ _geo permissions allows control countries sms traffic sent. 'll block (and charge for) messages intended countries included destination list._ _ _ _fraud thresholds enabled countries designation list. 's limit many messages set per hour countries approved. control allows take corrective action threshold breached.__we recommend secure plivo account immediately taking following steps:_ * _change plivo auth token:__generate auth token_ * _change login password:__reset password_ * _enable two-factor authentication (if done already):__profile settings_ * _restrict geo permissions countries want send traffic to:__sms geo permissions_ * _disable voice functionality: please let us know want use voice disable altogether **(post confirmation customer)**._ __we also strongly recommend below:__ * _plivo sends recharge alerts real-time. find unusual recharge activity, please act alerts immediately._ * _for sms, manage geo permissions_ _here_ * _for voice, manage geo permissions_ _here_ * _secure plivo auth token public client-side systems._ * _change auth_token every time employee access auth_token leaves company (if applicable)._ _if questions need assistance, please feel free reach customer support team.__thank attention matter.___________________________________________________| 1. pull mdr logs carefully consider account breached case sms pumping. 2. raising jira relevant data fpt board tagging rupam rajalekshmy. 3. things present jira : * mdr / cdr logs duration breach. * message content mdr. * total charges incurred breach. * email id auth id. 4\. investigating concern, rupam shall either approve/deny refund request jira let customers know accordingly.**_feature release_** :the product team rolled new feature console payment settings customers configure account balance alerts minimize risk service hindrance due low credit. done console _here_. always encourage customers set up.| | _account breach issue_ **point contacts** **and**** _rajalekshmy mahadevan_****and jiras created fpt board tag finance team respective pms jira.** **legacy confluence articles** : account compromised - reported customer","2. raising jira relevant data fpt board tagging rupam rajalekshmy. 3. things present jira : * mdr / cdr logs duration breach. * message content mdr. * total charges incurred breach. * email id auth id. 4\. investigating concern, rupam shall either approve/deny refund request jira let customers know accordingly. **_feature release_** :the product team rolled new feature console payment settings customers configure account balance alerts minimize risk service hindrance due low credit."
3711140012,Account Breached/Compromised Process,"Support receives queries where the customers report that their accounts are
breached.  
  
**Below are the two different types of scenarios:**

  1. **SMS Pumping Issue**

  2. **Account Compromised**  

**How to understand which type of issue is it?**

  1. **In the case of SMS pumping, there is typically a sudden increase in SMS traffic, particularly OTP (One-Time Password) or ARN (Authorization Code) traffic. Despite the increase in volume, the traffic profile remains consistent, with the same content being sent repeatedly.**

  2. **On the other hand, in instances of compromised authentication IDs or tokens, random traffic starts to appear. This traffic is not consistent and may vary in content.**

**Checklist**

  * We should pull out the MDRs / CDRs for the mentioned period (the timespan of the breach).

  * Analyze the traffic triggered from the account by viewing the message content.

  * If the traffic triggered is in line with their usual message content, then it is the issue of SMS pumping.

**Scenarios**| **What is?**| **Template**| **What to do?**| **Reference
Articles**| **Reference Jira**  
---|---|---|---|---|---  
**SMS Pumping**|  SMS pumping is also referred to as traffic pumping or
artificially inflated traffic (AIT). In this type of telecom fraud, bad actors
use automated systems to trigger sharp spikes in traffic toward numbers they
own and reap a share of the charges generated|  _We should also provide the IP
addresses from which the messages were triggered so that they are aware that
the messages were triggered from their IP itself. We can get the IP from the_
_Quicksight dashboard_ _or we can get them from DevOps Team as well.
__________________________________________________Hello Team,__Greetings for
the day!__Upon reviewing the recent activity on your Plivo account, we've
noticed some irregularities that require your attention. Our team has
validated the details and confirmed that there hasn't been a breach of your
account. However, it appears that your website may be susceptible to SMS
pumping.__To address this issue and prevent further misuse, we recommend
implementing safeguards on your website form where mobile numbers are
requested. You can find detailed instructions on how to safeguard your website
from SMS pumping in_ _this blog post_ _.__Additionally, it's important to note
that customers will still be charged for any messages triggered, but through
the provided feature, customers will be able to set a cap on the maximum auto-
recharge in a day or week.__To further enhance security, we suggest taking the
following actions:_

  * _Enable fraud shield**< <Hyper Link>>**_
  * _Set recharge limit**< <Hyper Link>>**_

_You can find detailed instructions on how to use these features in our_ _FAQs section_ _.__Please let me know if there is anything I can assist you with further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _SMS pumping issue_  
**Account Breach**|  Customer complains about his account was
hacked/compromised and unauthorized calls and messages were triggered from
his/her account which resulted in a loss of credit/money and requesting for a
refund.| _Whenever Account Breach is reported, we should initially send the
response to the customers to let them know how to secure their account at the
earliest :__We should also provide the IP addresses from which the
messages/calls were triggered and the login IP 's, We can get the IP from the
__Quicksight dashboard_ _or we can get them from DevOps Team as well.
____________________________________________________Hi Team,_  
_Greetings from Plivo Support!__We have received your request and understand
your account has been breached.__We recommend you use Fraud Shield to help
curb the risk of SMS fraud, such as_ _SMS pumping_ _and_ _account token
takeover_ _. Fraud Shield offers two primary features that operate at the
destination country level: Geo Permissions and Fraud Thresholds._  
_ _  
_Geo Permissions allows you to control the countries to which your SMS traffic
is sent. We 'll block (and not charge for) any messages that are intended for
countries not included in your destination list._  
_ _  
_Fraud Thresholds can be enabled for countries on your designation list. It 's
a limit of how many messages can be set per hour to the countries that you
have approved. This control allows you to take corrective action if the
threshold is breached.__We recommend that you secure your Plivo account
immediately by taking the following steps:_

  * _Change your Plivo Auth Token:__Generate Auth Token_
  *  _Change your login password:__Reset Password_
  *  _Enable two-factor authentication (If not done already):__Profile Settings_
  *  _Restrict your geo permissions to countries that you want to send traffic to:__SMS Geo Permissions_
  *  _Disable voice functionality: Please let us know if you don't want to use voice so we can disable it altogether **(post confirmation from the customer)**._

__We also strongly recommend the below:__

  * _Plivo sends recharge alerts in real-time. If you find any unusual recharge activity, please act on any such alerts immediately._
  * _For SMS, manage your geo permissions_ _here_
  *  _For Voice, manage your geo permissions_ _here_
  *  _Secure your Plivo Auth Token from any public and client-side systems._
  * _Change the auth_token every time an employee with access to the auth_token leaves the company (if applicable)._

_If you have any questions or need further assistance, please feel free to
reach out to our customer support team.__Thank you for your attention to this
matter.___________________________________________________|

  1. We should pull the MDR logs and carefully consider that the account is breached and it is not a case of SMS pumping.
  2. We should be raising a JIRA with the relevant data on the FPT board tagging Rupam and Rajalekshmy.
  3. The below things should be present on the JIRA : 

  * MDR / CDR logs for the duration of the breach.
  * Message content if it is MDR.
  * Total charges incurred during the breach.
  * Email ID and Auth ID.

4\. After investigating the concern, Rupam shall either approve/deny the
refund request on the JIRA and we can let the customers know
accordingly.**_Feature Release_** :The Product Team has now rolled out a new
feature in the console under Payment Settings where the customers can
configure the account balance alerts to minimize the risk of service hindrance
due to low credit.  
The same can be done from the console _here_. We should always encourage customers to set that up.| | _Account Breach issue_  
  
                 

**Point of Contacts**

**and**** _Rajalekshmy Mahadevan_****and all JIRAs should be created on the
FPT board and tag the Finance Team and the respective PMs on the JIRA.**

**Legacy Confluence Articles** :

Account compromised - Reported by the customer

","support receives queries customers report accounts breached. **below two different types scenarios:** 1. **sms pumping issue** 2. **account compromised** **how understand type issue it?** 1. **in case sms pumping, typically sudden increase sms traffic, particularly otp (one-time password) arn (authorization code) traffic. despite increase volume, traffic profile remains consistent, content sent repeatedly.** 2. **on hand, instances compromised authentication ids tokens, random traffic starts appear. traffic consistent may vary content.** **checklist** * pull mdrs / cdrs mentioned period (the timespan breach). * analyze traffic triggered account viewing message content. * traffic triggered line usual message content, issue sms pumping. **scenarios**| **what is?**| **template**| **what do?**| **reference articles**| **reference jira** ---|---|---|---|---|--- **sms pumping**| sms pumping also referred traffic pumping artificially inflated traffic (ait). type telecom fraud, bad actors use automated systems trigger sharp spikes traffic toward numbers reap share charges generated| _we also provide ip addresses messages triggered aware messages triggered ip itself. get ip the_ _quicksight dashboard_ _or get devops team well. __________________________________________________hello team,__greetings day!__upon reviewing recent activity plivo account, we've noticed irregularities require attention. team validated details confirmed breach account. however, appears website may susceptible sms pumping.__to address issue prevent misuse, recommend implementing safeguards website form mobile numbers requested. find detailed instructions safeguard website sms pumping in_ _this blog post_ _.__additionally, important note customers still charged messages triggered, provided feature, customers able set cap maximum auto- recharge day week.__to enhance security, suggest taking following actions:_ * _enable fraud shield**< >**_ * _set recharge limit**< >**_ _you find detailed instructions use features our_ _faqs section_ _.__please let know anything assist further._ ________________________________________________| | https://www.plivo.com/blog/sms-pumping/ | _sms pumping issue_ **account breach**| customer complains account hacked/compromised unauthorized calls messages triggered his/her account resulted loss credit/money requesting refund.| _whenever account breach reported, initially send response customers let know secure account earliest :__we also provide ip addresses messages/calls triggered login ip 's, get ip __quicksight dashboard_ _or get devops team well. ____________________________________________________hi team,_ _greetings plivo support!__we received request understand account breached.__we recommend use fraud shield help curb risk sms fraud, as_ _sms pumping_ _and_ _account token takeover_ _. fraud shield offers two primary features operate destination country level: geo permissions fraud thresholds._ _ _ _geo permissions allows control countries sms traffic sent. 'll block (and charge for) messages intended countries included destination list._ _ _ _fraud thresholds enabled countries designation list. 's limit many messages set per hour countries approved. control allows take corrective action threshold breached.__we recommend secure plivo account immediately taking following steps:_ * _change plivo auth token:__generate auth token_ * _change login password:__reset password_ * _enable two-factor authentication (if done already):__profile settings_ * _restrict geo permissions countries want send traffic to:__sms geo permissions_ * _disable voice functionality: please let us know want use voice disable altogether **(post confirmation customer)**._ __we also strongly recommend below:__ * _plivo sends recharge alerts real-time. find unusual recharge activity, please act alerts immediately._ * _for sms, manage geo permissions_ _here_ * _for voice, manage geo permissions_ _here_ * _secure plivo auth token public client-side systems._ * _change auth_token every time employee access auth_token leaves company (if applicable)._ _if questions need assistance, please feel free reach customer support team.__thank attention matter.___________________________________________________| 1. pull mdr logs carefully consider account breached case sms pumping. 2. raising jira relevant data fpt board tagging rupam rajalekshmy. 3. things present jira : * mdr / cdr logs duration breach. * message content mdr. * total charges incurred breach. * email id auth id. 4\. investigating concern, rupam shall either approve/deny refund request jira let customers know accordingly.**_feature release_** :the product team rolled new feature console payment settings customers configure account balance alerts minimize risk service hindrance due low credit. done console _here_. always encourage customers set up.| | _account breach issue_ **point contacts** **and**** _rajalekshmy mahadevan_****and jiras created fpt board tag finance team respective pms jira.** **legacy confluence articles** : account compromised - reported customer",done console _here_. always encourage customers set up.| | _account breach issue_ **point contacts** **and**** _rajalekshmy mahadevan_****and jiras created fpt board tag finance team respective pms jira. ** **legacy confluence articles** : account compromised - reported customer
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","**queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.",sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay? ** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk.
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","* queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","* also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","**from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.",* also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier).
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","* check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","**some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","* ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","* expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","* cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","* time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr)."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.",* also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers.
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.",blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code.
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","* also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","(for example, phrases like ""your home insurance quotes ready! "", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","* carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","* informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","* case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","* sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","* check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","* customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.","* would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue."
3711140211,Outbound Message Delivery Issues,"This document explains most of the possible causes of SMS delivery issues for
outbound messages that are reported by customers and how to resolve them.

Outbound Debugging Flowchart

# Basic Checks:

Before moving into the depth of any investigation, we need to do the basic
checks at our end:

  1. Check the account type of the customer. Whether it is a Developer (free trial) or a Standard account. _Link_

  2. Check if the customer has enough credits in his account. _Link_

  3. Check the _Plivo Status Page_ for any outage updated at our end or the carrier's end on that day and also match the timestamps of the reported issue. 

  4. Check the Plivo error code and carrier error code. 

  5. Check the customer's statistics if he has reported SMS delivery issues towards a particular country or number, in order to find out patterns. We can also try checking if this issue is occurring for multiple customers or a single customer. 

  6. Check if the customer is sending an SMS to a valid destination number. 

  7. Check if the customer is abiding by the country's regulations for the destination country. 

# Message States:

When an outbound message is triggered, the customers get to see the messages
usually in 5 states.

  1. **Queued** : All outbound messages are initially 'Queued' which means that Plivo has 'accepted' the message from a user and will attempt to send the message to the respective downstream carrier for delivery.

  2. **Failed** : This status is updated when Plivo is unable to submit the message to the carrier. This is usually due to an internal error at Plivo's end. 

  3. **Sent** : A message is marked as ""Sent"" when the message is successfully passed on to the carrier for delivery. 

  4. **Delivered** : The message is delivered to the end-user (destination number).

  5. **Undelivered** : The message is marked as ""Undelivered"" depending on the delivery receipt received from the carrier. 

note

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

The customers are only charged for the messages which the message was sent to
the carrier for delivery, ie, Sent, Delivered, and Undelivered. The customers
are not charged for messages that are in the 'Failed' state.

In order to investigate any SMS outbound delivery issue, we would need samples
(Message UUIDs) to review the issue that has been reported by our customers.
Few customers do provide us with the specific message UUIDs in the tickets but
few do not. For the customers who do not provide us with the message UUIDs, we
can try to figure out a few specific message UUIDs by fetching their MDRs. For
example, if a customer has reported ""_Few of our messages are being delivered
with a delay of 5 mins since yesterday_ "". In this case, we can fetch his MDRs
for yesterday, filter them by 'delivered', and see the number of samples that
show up. If the number of samples is less (like 10-30), we can compare the
delivery DATE column and the DELIVERY TIME column and check for the messages
that faced the delay. If the number of messages is huge, then we can reach out
to the customer asking for specific samples. Another example is if the
customer says ""Many of our messages are being marked as delivered but our
users do not receive them."" In this case, we would need to reach out to the
customer for the specific message UUIDs as we would be unable to figure out
the specific Message UUIDs that were not delivered (fake delivery).

The SMS outbound delivery issues can be broadly classified as per the delivery
statuses:

  1. Issues occurring for **delivered samples**.

  2. Issues occurring for **undelivered samples**.

  3. Issues occurring for **failed samples**.

  4. Issues occurring for samples stuck in the **sent state**. 

# Under Delivered Samples:

## 1\. SMS Delayed:

### a. Delay from Plivo/Customer:

We need to check the difference between the queued and the sent message time
and see if there is a delay in the message being sent from our platform after
it was in the queued state.

**How to check the 'queued' and 'sent' time and the delay?**

**From Debug Tool:** You can see that the delay here is 6 minutes which
occurred at our end as the delay occurred between the queued and the sent
state.

**From Logs:**

You can look for the exact timestamps of the queued time and the sent time
from OpenSearch as well as from the Server Logs in Ryuk.

  * Queue Time (OpenSearch): Filter by ""message_uuid"" and ""SMS queued to SharQ""  
In Ryuk under Plivo API:

  * Sent Time (OpenSearch): Filter by ""message_uuid"" and ""submit_sm""  
In Ryuk under Kannel:

The difference between the queued and sent time would give the delay.

For example:

From the above picture, we can see that there was a delay of 6 minutes on our
end. In such a case, we need to do the below checks:

  * If there is a delay, check the customer's MPS first. There are chances that the customer might be using a sub-account to trigger these messages, check the sub-account MPS as well (however, there are not many customers who have their MPS at a subaccount level. Most customers have their MPS set at the main account level. Also, keep in mind that the MPS for MMS and SMS are different).

  * Go to OpenSearch and search using the customer's 'AUTH_ID' or the number (in the case of the US/Canada), and see how many messages were triggered from their account/number in that particular time (you can take a range of 1 minute and see how many messages were triggered in that 1 minute). 

  * For non-US/Canada destinations, the messages would get dequeued as per the customer's MPS. Eg. Customer's SMS MPS is 5, but he's triggering 10,000 SMS per second, then there would be a delay for the messages to get dequeued.

  * Also, for the subaccounts, if the MPS is set to 3 and the MPS is set to 5 for the main account, the messages will go through 3 units per second from the sub-account triggered.

  * For US/Canada numbers, the messages would get dequeued based on the number type, i.e for long codes - 1 SMS/4sec, Tollfree - 40 SMS/sec, shortcode - 100 SMS/sec. Deque Rates' Article: _Link_

**OR**

  * We can use the Messaging Dashboard on Quicksight to get an account's MPS usage for the last 15 days.

  * If there are no issues found even after checking the above steps then try triggering an outbound message to your number and see if there's any delay.

  * We also need to check the _Plivo Status Page_ once. Otherwise, we can raise it to the MPT Team via a JIRA (_How to Create a JIRA Article_). 

### b. Delay from Carrier:

We check the difference between the sent and the delivered time and see if the
delivered time has a huge delay after the sent time.

**How to check the sent and delivered time and the delay?  **

The same way we checked the delay in the queuing time at our end as mentioned
in my previous point.

**From Debug Tool:**

**From Logs in OpenSearch (although this is not required as we can get the
exact delay time from the time graph shown above):**

  * Sent Time: Filter by ""message_uuid"" and ""submit_sm""

  * Delivered Time: Filter by ""message_uuid"" and ""deliver_sm""

The difference between the sent and delivered time would give the delay.

For example:

In the above picture, we can see that the message took 14384090 milliseconds
(4 hours) to get delivered. So there was a delay of 4 hours from our carrier's
end.

  * If the message is queued and de-queued (sent) from our end without any issue/delay, and if the message is delivered from the carrier's end after a delay, then we raise it with the carrier.

  * We can also do a quick delivery test or perform a CSG test to check the delay through carriers (if any).

  * We can also check the Plivo and Carrier status page for any notice regarding delays that might be related to the messages reported by the customer.

## 2\. Content Alteration:

This would be a case where the customer has reported an issue where the
message content sent out is different from the message content received on the
end user's device.

  * We would first need the message content that was received on the end user's device (preferably a screenshot as it would be solid proof in case we need to reach out to our carrier). 

  * Check the submit_sm's dump from OpenSearch to see what was sent from Plivo's platform. You can also find this in Ryuk under the Kannel Logs:

  * We can use this _Dump Decoder_ to decode the dump to see what message content is sent to our outbound carrier and compare it with the actual message on the end user's device. 

  * If we find that the same content received from the customer's end and the one sent from us are different, then we should work with our outbound carrier to find the cause.

note

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Most of the issues happen in terms of the ""Unicode"" character. In this case,
we should always check from OpenSearch the Unicode character and convert it
into the actual character and compare if the customer has sent the same or
not. If the character has changed from our end we will have to check that with
the engineering team and if the content has not changed from our end and same
as what has been sent from the customer, then we will have to check with the
outbound carrier.

Also, there are a few characters that are listed as both GSM and Unicode. In
such cases, Plivo will do a GSM encoding instead of Unicode.

There are various online tools to check the Unicode character and get the
actual character. One of the links is given below:

_Decode or Encode Unicode Text - Online Toolz_

Additionally, customers can check the number of characters present in their message content, and the number of units their content sums up to, by using the tool mentioned in this document: _Encoding and Concatenation | Plivo Developers_. 

This tool also detects the encoding type of the content and also helps detect
the Unicode characters present in the content.

**Some general queries related to SMS concatenation:**

  * If a message contains GSM characters then 160 characters would be considered as 1 unit, and any character after that would be considered as a second unit of the same long message.

  * If a message contains at least 1 Unicode character, 70 characters in the same message would be considered as 1 unit and the remaining character would be considered as the second unit.

## 3\. Sender ID Alteration:

This issue would arise when the customer reports that for his messages, the
Sender ID is being replaced at the end user's device. Follow the below steps
to debug this type of issue.

  * Ask the customer for the message UUIDs and the sender ID that has been shown on the end user's device (preferably a screenshot). 

  * Check the country the messages are being sent to and see if the customer is abiding by all the country-level regulations that are mentioned on our _SMS Coverage Page_. There are three types of countries:  
**I. Dynamic sender ID Countries:** Customers can send messages using any
sender ID to these countries, but if the messages are coming through a non-
alphanumeric sender ID, Plivo will automatically replace it with the
registered sender ID in their account.  
**II. Preregistration sender ID Countries:** For these countries, the customer
would need to register their Sender IDs from our console, in order to be able
to send messages to them.  
**III. Countries that do not support Sender IDs:** SMS will be delivered but
the sender ID used in the From number will be replaced with local numbers or
short codes or a generic code based on the country's regulation for delivery.

  * Depending on what category the country falls under and its sender ID regulations (mentioned on our SMS coverage page), we would need to check if it is expected behaviour for the Sender ID to be replaced with any other local number or a shortcode or a generic code. 

  * If it is an expected behaviour, then we can educate the customer about why his Sender ID is being replaced. 

  * If it is not expected behaviour, we would need to reach out to our outbound carrier to investigate this issue further. 

Sample Tickets:

  * Sender ID getting replaced due to operator regulation

  * Sender ID not being retained due to the country regulation

  * Sender ID getting replaced due to carrier issue

  * Unique Sender ID case for South Africa

## 4\. Fake/False Delivery Issue:

This issue would be reported by the customer when the messages are in the
delivered state but the customer claims that the messages did not reach the
end user's handset.

  * In such cases, we would need to check if the customer is sending his messages by following all the rules and regulations of the country. For example, Iran falls under DR countries which basically means that you would not have to pre-register your sender ID in order to be able to send messages to this country. The customer has reported that his messages to MCI operator numbers are being fake delivered. According to the country regulations of Iran, we would need to pre-register our SID so that we can send messages to MCI operator numbers. If the customer is found sending unregistered traffic, we need to ask him to first get his traffic registered and then let us know if the issue persists. 

  * Most of the time these issues are reported for only a single destination number. In cases like these, please request the customer to help us with samples with 2-3 unique destination numbers that faced fake delivery (The reason being, most of our carriers tend to isolate the case as a handset/end-user issue if only 1 destination number is reported. Getting more unique destination samples will help us build a stronger case with our carrier). 

  * Once we have the samples and see that the customer is abiding by the rules, reach out to the carrier and check why the messages were not delivered to the end-users, in spite of receiving a deliver_sm (delivery report/DLR). 

  * It is also a good practice to check the Plivo status page as well. 

# Under Undelivered Samples:

Each undelivered sample has a Plivo Error Code and a Carrier Error Code.
Sometimes these codes are self-explanatory and we should inform the customers
that there would not be any need to reach out to our carriers.

## 1\. SPAM Error:

### i. Blocked by Plivo (common for all countries):

Plivo has a Keyword Blocker feature available on Ryuk (https://ryuk-
vue.ovilp.io/sms/keyword_blocker/content/). This feature helps us control SPAM
by blocking messages that contain certain keywords (added on the Ryuk page) at
the Plivo level so that they do not reach the carriers.

Advantages:

  1. Better identification of accounts sending SPAM/Prohibited content.

  2. Lesser violation complaints from carriers.

Loom for reference:
https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b

  * Check the carrier error code received from the messages marked as SPAM (Plivo Error Code: 30)

  * If the carrier error code is 2000, then the message was blocked by Plivo and did not reach the carrier.   
Example:

note

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

For the customers, on the console, this message would look exactly similar to
any normal message that was marked as SPAM by the carriers.

  * Check the message content and try to identify the keyword that raised the block.

  * We can search for the keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/

  * If the content looks to be non-spammy and the block is a false positive, we can reach out to MPT with the details for further analysis. 

  * If we are able to identify the keyword that led to the block and the content looks to be SPAM or disallowed content, inform the customer that the messages were marked as SPAM due to prohibited/SPAM content.

### ii. Blocked by Carrier:

### a.  For Non-US/Canadian countries -

We do not usually see a lot of SPAM error messages for international
messaging.  

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup. See if the customer has sent messages to that number/s previously and also check the message state of those messages. 

  * We can also check the customer's message content and see if it seems like SPAM. 

  * Check if there are any Sender ID regulations towards that country if the customer is abiding by them.

  * Check if we have received a carrier error code from the carrier and also the Plivo error code. If the error code is self-explanatory, then inform the customer as to why the messages were not delivered. 

  * Otherwise, raise it with the carrier. 

### b. For  US/Canada:

  * Check the message sample and see if the message is sent to a valid number by checking in the lookup.

  * Check if the SMS content abides by the Best practices. 

  * Check the source number from which the messages were triggered.

    * For TFN:

      * Check if the number is a verified TFN or not.

      * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

      * Check if the customer is using URLs in the message content. If yes, check if the URLs have multiple redirects. If yes, inform the customer. 

      * Also, check the status page of both, Plivo and Zipwhip.

      * Check the verification form submitted on the ZW portal to check if the message content matches their use case or not.

        * If it does not match and looks like SPAM, we can inform the customer that the probable reason for a SPAM block can also be when the message contents sent do not match with the use case the TFN was verified for. And reach out to the carrier for further details on the block.

        * If it matches the use case and everything looks legit, reach out to the carrier with the samples to request further clarification on the blocks.

    * For LC:

      * For the US:

        * Check the use case of the 10DLC campaign the number is linked to.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * If the use case looks the same as the message content of the message, reach out to the carrier for further explanation.

      * For CA:

        * Check the message content and see if there is any presence of SPAM/prohibited words or if they're following the best practices for US/CA messaging or not.

        * Check the carrier error code received for the message. If it is self-explanatory, inform the customer about the same.

        * Reach out to the carrier for further clarification.

    * For SC:

      * The steps are the same as TFN.

      * We can get the campaign details for the SC from the carrier's console.

Sometimes messages are blocked as SPAM on TFs, even for verified genuine cases
i.e., False Positives. Zipwhip removes the block after verifying the reported
messages.

As per Zipwhip, cases are marked as spam if they observe a slight variation in
content, or if the message strays away from general messaging best practices,
or if the customer is using words that match already existing SPAM messages
that have been verified and blocked as SPAM. In such cases, a content-based
fingerprint is triggered at ZW's SPAM platform.

Some common scenarios where verified traffic can be marked as SPAM:

  * Sending party ambiguity,

  * Lack of opt-out keywords,

  * The similarity in content to other SPAM campaigns. (For example, phrases like ""your home insurance quotes are ready!"", ""We just shopped your auto insurance. View your quotes here"" are commonly considered 'auto insurance' spam campaigns. Adding a company name and opt-out keywords can resolve the issue.)

## 2\. Unknown Error:

  * Check if the customer is adhering to all the country and Sender ID regulations. 

  * If we do not see any reason for the message failure, we can reach out to the carrier to find the root cause of the delivery failure.  

    * We also need to ask the carrier for the reason for the error representing the specific carrier error code. 

    * Once we have the carrier error code information, we need to raise an MPT to get the carrier error code mapped. 

## 3\. Invalid Destination Number:

  * If the customer's messages are undelivered because of error code 50, then it means that the customer is sending SMS to invalid destination numbers, or not SMS-enabled numbers, or to PSTN landline.

  * In order to avoid this, we can suggest the customer enable _Enhanced Destination Number Validation_ from his console. When enabled, messages to invalid numbers and numbers that are not SMS-enabled will be rejected. Plivo API will return a 400 Bad Request HTTP response for such requests.

  * Before informing the customer about the above point , we can check in Ryuk (under Additional Feature) if this feature is already enabled for the customer or not. 

  * However, if the Destination Number Validation is already enabled for the customer but still he is getting an unusually very high number of this error code and he claims that the messages are being sent to the correct destination numbers, we can make an exception and report this issue to our carrier for further validation. 

## 4\. Other Error Codes:  

  * Messages undelivered with any other Each undelivered sample has a Plivo Error Code and a Carrier Error Code. Sometimes these codes are self-explanatory and we should inform the customers and there would not be any need to reach out to our carriers. 

  * In case we need additional clarity, we can reach out to the carrier. 

# Under Sent Samples:

These are messages for which we do not receive any DLRs from the carriers. We
can follow the below steps for this issue:

  * If a customer reports that the messages are in the Sent state, check if delivery receipts/reports are supported towards the country reported from our _SMS Coverage Page_. 

  * If the customer is following the country's regulations or not.

  * If delivery reports/receipts are supported, then reach out to the carrier by helping them with the message samples. 

  * If the delivery reports are not supported for that country, we can educate the customer about the same. 

  * Also, check with the customer if the messages have reached the handset or not. If not reached, then you would have to reach out to the carrier. 

  * For the messages being sent out from Plivo source numbers (source-based routing) (Countries: US, Canada):

    * Check if all the messages from that particular source number are facing this issue. 

      * If yes:

        * Check the number configuration from Ryuk and see if the SMS capabilities are correctly marked and mapped. 

        * Check the carrier website to see if the number is active and in service. 

        * If everything looks fine, we need to reach out to the carrier who owns the number. 

      * If no: 

        * We can directly reach out to the carrier involved. 

# Under Failed Samples:

## 1\. Messages failing with Plivo Error Code 300(towards US/Canada):

  * In such cases, go to Ryuk and check the Gotham logs. 

  * Check if you find a reason for the failure of the messages by going through the logs. Usually, you can figure out the issue through the logs themselves. 

  * Example of one such error: ""Could not get source-based routing: No gateway ID or gateway name found in config"". 

  * In such cases, raise the issue with the SMS Team.

  * Sometimes, SMS/MMS fail to be dispatched from our end due to connectivity issues with the carrier - one such example is Syniverse:  
{""level"":""error"",""ts"":""2020-09-10T17:26:38Z"",""caller"":""gandalf/service.go:97"",""msg"":""ERROR
EXECUTING
sendToCarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error
while creating smtp connection to host: 173.209.201.146, port: 25: dial tcp
173.209.201.146:25: i/o
timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""Syniverse_Premium_OTP"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*InternalService).sendMessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""}  
In such cases, please reach out to the engineering team immediately.

## 2\. SMS Failure due to Pricing issue (We would get error code 90 for such
cases):

  * This issue is not very commonly seen. 

  * Check if the customer has credits. 

  * Check if messages to other countries are going through from their account without any issues.

  * If no issue in the above 2 conditions, go to Ryuk and check the Gotham logs of the message sample. 

  * Check the error reason mentioned in Gotham

  * If the following error is seen: ""No rate/prefix matching dst number: Could not find outgoing SMS charge for groupid= ****. Error: record not found (404)"", then this means to say that there is no pricing updated for that particular SMS Group ID/Name

  * To debug this error, go to the SMS configuration -> Outbound SMS group in Ryuk and filter by the country the customer is facing the issue with. Check the SMS group name associated with that particular SMS group ID. 

  * Then go to, Outbound SMS Pricing, and check for the country the customer is facing an issue. Check-in global pricing if the customer is on the Standard Product Plan, or if the customer has a custom product plan, then check under the Product Plan Pricing Tab. This step is performed to check if there is any pricing associated with that SMS Group Name. 

  * Check if there is pricing updated for that SMS Group. If not, then reach out to the concerned team.

  * Also, the MCC and MNC need to be mapped to the outgoing SMS group. To check if it is mapped to the SMS group name, navigate _here_. If it is not mapped, reach out to the concerned team.

## 3\. Geo-Permissions:

  * This error code is pretty simple and straightforward. If the customer reports that his messages are failing with the error code 450, this means that the Geo-Permissions for that country for their account were disabled at the time the message was triggered. 

  * To verify the current status of Geo-Permissions, we can use Ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home

  * If it is disabled, ask the customer to enable his SMS geo-permissions for that country from his Plivo console (https://console.plivo.com/sms/settings/fraud-shield/) in order to send messages. 

# Miscellaneous Delivery Issue:

## 1\. Sandbox Issue:

  * This type of issue would fail at an API level. 

  * If a customer is on a free trial/developer account, it is mandatory for him to sandbox the destination number to which he wishes to send an SMS.

  * On Ryuk, under,_account settings_ you would be able to check the destination numbers the customer has sandboxed.

  * If they have not sandboxed the destination number, then we need to educate them about the same. 

  * Link to navigate to the sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_

  * The customer can sandbox only 5 numbers. They cannot delete any of the sandboxed numbers.

## 2\. US source number not mapped to a 10DLC campaign.

  * This type of issue would fail at an API level. 

  * This would happen when a customer is sending a message to the US and their Plivo US source number is not 10DLC linked. 

  * Check if the customer has any active 10DLC campaigns from https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/

  * If he does not, inform the customer that we would need to register for 10DLC and link his US local number to an active campaign in order to send messages to the US. 

  * If he does, ask the customer to link their US local number to an appropriate campaign depending on their use case. 

# Sample Tickets:

  * https://plivo.zendesk.com/agent/tickets/19048 \- Fake Delivery & Unknown Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/22939 \- Undelivered Samples & Sent Samples. 

  * https://plivo.zendesk.com/agent/tickets/22781 \- Unknow Error Issue. 

  * https://plivo.zendesk.com/agent/tickets/201420 \- Sent State Samples. 

  * https://plivo.zendesk.com/agent/tickets/182075 \- Invalid Dst Number. 

  * https://plivo.zendesk.com/agent/tickets/78602 \- Fake Delivery.

  * https://plivo.zendesk.com/agent/tickets/128798 \- SPAM Error.

","document explains possible causes sms delivery issues outbound messages reported customers resolve them. outbound debugging flowchart # basic checks: moving depth investigation, need basic checks end: 1. check account type customer. whether developer (free trial) standard account. _link_ 2. check customer enough credits account. _link_ 3. check _plivo status page_ outage updated end carrier's end day also match timestamps reported issue. 4. check plivo error code carrier error code. 5. check customer's statistics reported sms delivery issues towards particular country number, order find patterns. also try checking issue occurring multiple customers single customer. 6. check customer sending sms valid destination number. 7. check customer abiding country's regulations destination country. # message states: outbound message triggered, customers get see messages usually 5 states. 1. **queued** : outbound messages initially 'queued' means plivo 'accepted' message user attempt send message respective downstream carrier delivery. 2. **failed** : status updated plivo unable submit message carrier. usually due internal error plivo's end. 3. **sent** : message marked ""sent"" message successfully passed carrier delivery. 4. **delivered** : message delivered end-user (destination number). 5. **undelivered** : message marked ""undelivered"" depending delivery receipt received carrier. note customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. customers charged messages message sent carrier delivery, ie, sent, delivered, undelivered. customers charged messages 'failed' state. order investigate sms outbound delivery issue, would need samples (message uuids) review issue reported customers. customers provide us specific message uuids tickets not. customers provide us message uuids, try figure specific message uuids fetching mdrs. example, customer reported ""_few messages delivered delay 5 mins since yesterday_ "". case, fetch mdrs yesterday, filter 'delivered', see number samples show up. number samples less (like 10-30), compare delivery date column delivery time column check messages faced delay. number messages huge, reach customer asking specific samples. another example customer says ""many messages marked delivered users receive them."" case, would need reach customer specific message uuids would unable figure specific message uuids delivered (fake delivery). sms outbound delivery issues broadly classified per delivery statuses: 1. issues occurring **delivered samples**. 2. issues occurring **undelivered samples**. 3. issues occurring **failed samples**. 4. issues occurring samples stuck **sent state**. # delivered samples: 1\. sms delayed: a. delay plivo/customer: need check difference queued sent message time see delay message sent platform queued state. **how check 'queued' 'sent' time delay?** **from debug tool:** see delay 6 minutes occurred end delay occurred queued sent state. **from logs:** look exact timestamps queued time sent time opensearch well server logs ryuk. * queue time (opensearch): filter ""message_uuid"" ""sms queued sharq"" ryuk plivo api: * sent time (opensearch): filter ""message_uuid"" ""submit_sm"" ryuk kannel: difference queued sent time would give delay. example: picture, see delay 6 minutes end. case, need checks: * delay, check customer's mps first. chances customer might using sub-account trigger messages, check sub-account mps well (however, many customers mps subaccount level. customers mps set main account level. also, keep mind mps mms sms different). * go opensearch search using customer's 'auth_id' number (in case us/canada), see many messages triggered account/number particular time (you take range 1 minute see many messages triggered 1 minute). * non-us/canada destinations, messages would get dequeued per customer's mps. eg. customer's sms mps 5, he's triggering 10,000 sms per second, would delay messages get dequeued. * also, subaccounts, mps set 3 mps set 5 main account, messages go 3 units per second sub-account triggered. * us/canada numbers, messages would get dequeued based number type, i.e long codes - 1 sms/4sec, tollfree - 40 sms/sec, shortcode - 100 sms/sec. deque rates' article: _link_ **or** * use messaging dashboard quicksight get account's mps usage last 15 days. * issues found even checking steps try triggering outbound message number see there's delay. * also need check _plivo status page_ once. otherwise, raise mpt team via jira (_how create jira article_). b. delay carrier: check difference sent delivered time see delivered time huge delay sent time. **how check sent delivered time delay? ** way checked delay queuing time end mentioned previous point. **from debug tool:** **from logs opensearch (although required get exact delay time time graph shown above):** * sent time: filter ""message_uuid"" ""submit_sm"" * delivered time: filter ""message_uuid"" ""deliver_sm"" difference sent delivered time would give delay. example: picture, see message took 14384090 milliseconds (4 hours) get delivered. delay 4 hours carrier's end. * message queued de-queued (sent) end without issue/delay, message delivered carrier's end delay, raise carrier. * also quick delivery test perform csg test check delay carriers (if any). * also check plivo carrier status page notice regarding delays might related messages reported customer. 2\. content alteration: would case customer reported issue message content sent different message content received end user's device. * would first need message content received end user's device (preferably screenshot would solid proof case need reach carrier). * check submit_sm's dump opensearch see sent plivo's platform. also find ryuk kannel logs: * use _dump decoder_ decode dump see message content sent outbound carrier compare actual message end user's device. * find content received customer's end one sent us different, work outbound carrier find cause. note issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. issues happen terms ""unicode"" character. case, always check opensearch unicode character convert actual character compare customer sent not. character changed end check engineering team content changed end sent customer, check outbound carrier. also, characters listed gsm unicode. cases, plivo gsm encoding instead unicode. various online tools check unicode character get actual character. one links given below: _decode encode unicode text - online toolz_ additionally, customers check number characters present message content, number units content sums to, using tool mentioned document: _encoding concatenation | plivo developers_. tool also detects encoding type content also helps detect unicode characters present content. **some general queries related sms concatenation:** * message contains gsm characters 160 characters would considered 1 unit, character would considered second unit long message. * message contains least 1 unicode character, 70 characters message would considered 1 unit remaining character would considered second unit. 3\. sender id alteration: issue would arise customer reports messages, sender id replaced end user's device. follow steps debug type issue. * ask customer message uuids sender id shown end user's device (preferably screenshot). * check country messages sent see customer abiding country-level regulations mentioned _sms coverage page_. three types countries: **i. dynamic sender id countries:** customers send messages using sender id countries, messages coming non- alphanumeric sender id, plivo automatically replace registered sender id account. **ii. preregistration sender id countries:** countries, customer would need register sender ids console, order able send messages them. **iii. countries support sender ids:** sms delivered sender id used number replaced local numbers short codes generic code based country's regulation delivery. * depending category country falls sender id regulations (mentioned sms coverage page), would need check expected behaviour sender id replaced local number shortcode generic code. * expected behaviour, educate customer sender id replaced. * expected behaviour, would need reach outbound carrier investigate issue further. sample tickets: * sender id getting replaced due operator regulation * sender id retained due country regulation * sender id getting replaced due carrier issue * unique sender id case south africa 4\. fake/false delivery issue: issue would reported customer messages delivered state customer claims messages reach end user's handset. * cases, would need check customer sending messages following rules regulations country. example, iran falls dr countries basically means would pre-register sender id order able send messages country. customer reported messages mci operator numbers fake delivered. according country regulations iran, would need pre-register sid send messages mci operator numbers. customer found sending unregistered traffic, need ask first get traffic registered let us know issue persists. * time issues reported single destination number. cases like these, please request customer help us samples 2-3 unique destination numbers faced fake delivery (the reason being, carriers tend isolate case handset/end-user issue 1 destination number reported. getting unique destination samples help us build stronger case carrier). * samples see customer abiding rules, reach carrier check messages delivered end-users, spite receiving deliver_sm (delivery report/dlr). * also good practice check plivo status page well. # undelivered samples: undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. 1\. spam error: i. blocked plivo (common countries): plivo keyword blocker feature available ryuk (https://ryuk- vue.ovilp.io/sms/keyword_blocker/content/). feature helps us control spam blocking messages contain certain keywords (added ryuk page) plivo level reach carriers. advantages: 1. better identification accounts sending spam/prohibited content. 2. lesser violation complaints carriers. loom reference: https://www.loom.com/share/e354e3e561484820b0a8b5b4dc9cc14b * check carrier error code received messages marked spam (plivo error code: 30) * carrier error code 2000, message blocked plivo reach carrier. example: note customers, console, message would look exactly similar normal message marked spam carriers. customers, console, message would look exactly similar normal message marked spam carriers. * check message content try identify keyword raised block. * search keywords under: https://ryuk-vue.ovilp.io/sms/keyword_blocker/content/ * content looks non-spammy block false positive, reach mpt details analysis. * able identify keyword led block content looks spam disallowed content, inform customer messages marked spam due prohibited/spam content. ii. blocked carrier: a. non-us/canadian countries - usually see lot spam error messages international messaging. * check message sample see message sent valid number checking lookup. see customer sent messages number/s previously also check message state messages. * also check customer's message content see seems like spam. * check sender id regulations towards country customer abiding them. * check received carrier error code carrier also plivo error code. error code self-explanatory, inform customer messages delivered. * otherwise, raise carrier. b. us/canada: * check message sample see message sent valid number checking lookup. * check sms content abides best practices. * check source number messages triggered. * tfn: * check number verified tfn not. * check carrier error code received message. self-explanatory, inform customer same. * check customer using urls message content. yes, check urls multiple redirects. yes, inform customer. * also, check status page both, plivo zipwhip. * check verification form submitted zw portal check message content matches use case not. * match looks like spam, inform customer probable reason spam block also message contents sent match use case tfn verified for. reach carrier details block. * matches use case everything looks legit, reach carrier samples request clarification blocks. * lc: * us: * check use case 10dlc campaign number linked to. * check carrier error code received message. self-explanatory, inform customer same. * use case looks message content message, reach carrier explanation. * ca: * check message content see presence spam/prohibited words they're following best practices us/ca messaging not. * check carrier error code received message. self-explanatory, inform customer same. * reach carrier clarification. * sc: * steps tfn. * get campaign details sc carrier's console. sometimes messages blocked spam tfs, even verified genuine cases i.e., false positives. zipwhip removes block verifying reported messages. per zipwhip, cases marked spam observe slight variation content, message strays away general messaging best practices, customer using words match already existing spam messages verified blocked spam. cases, content-based fingerprint triggered zw's spam platform. common scenarios verified traffic marked spam: * sending party ambiguity, * lack opt-out keywords, * similarity content spam campaigns. (for example, phrases like ""your home insurance quotes ready!"", ""we shopped auto insurance. view quotes here"" commonly considered 'auto insurance' spam campaigns. adding company name opt-out keywords resolve issue.) 2\. unknown error: * check customer adhering country sender id regulations. * see reason message failure, reach carrier find root cause delivery failure. * also need ask carrier reason error representing specific carrier error code. * carrier error code information, need raise mpt get carrier error code mapped. 3\. invalid destination number: * customer's messages undelivered error code 50, means customer sending sms invalid destination numbers, sms-enabled numbers, pstn landline. * order avoid this, suggest customer enable _enhanced destination number validation_ console. enabled, messages invalid numbers numbers sms-enabled rejected. plivo api return 400 bad request http response requests. * informing customer point , check ryuk (under additional feature) feature already enabled customer not. * however, destination number validation already enabled customer still getting unusually high number error code claims messages sent correct destination numbers, make exception report issue carrier validation. 4\. error codes: * messages undelivered undelivered sample plivo error code carrier error code. sometimes codes self-explanatory inform customers would need reach carriers. * case need additional clarity, reach carrier. # sent samples: messages receive dlrs carriers. follow steps issue: * customer reports messages sent state, check delivery receipts/reports supported towards country reported _sms coverage page_. * customer following country's regulations not. * delivery reports/receipts supported, reach carrier helping message samples. * delivery reports supported country, educate customer same. * also, check customer messages reached handset not. reached, would reach carrier. * messages sent plivo source numbers (source-based routing) (countries: us, canada): * check messages particular source number facing issue. * yes: * check number configuration ryuk see sms capabilities correctly marked mapped. * check carrier website see number active service. * everything looks fine, need reach carrier owns number. * no: * directly reach carrier involved. # failed samples: 1\. messages failing plivo error code 300(towards us/canada): * cases, go ryuk check gotham logs. * check find reason failure messages going logs. usually, figure issue logs themselves. * example one error: ""could get source-based routing: gateway id gateway name found config"". * cases, raise issue sms team. * sometimes, sms/mms fail dispatched end due connectivity issues carrier - one example syniverse: {""level"":""error"",""ts"":""2020-09-10t17:26:38z"",""caller"":""gandalf/service.go:97"",""msg"":""error executing sendtocarrier()"",""message_uuid"":""16ac360c-f389-11ea-93ef-0242ac110003"",""error"":""error creating smtp connection host: 173.209.201.146, port: 25: dial tcp 173.209.201.146:25: i/o timeout"",""carrier_id"":""16772250647484"",""carrier_name"":""syniverse_premium_otp"",""stacktrace"":""github.com/plivo/gandalf/internal/gandalf.(*internalservice).sendmessage\n\t/home/ubuntu/workspace/plivo_gandalf_master/src/github.com/plivo/gandalf/internal/gandalf/service.go:97""} cases, please reach engineering team immediately. 2\. sms failure due pricing issue (we would get error code 90 cases): * issue commonly seen. * check customer credits. * check messages countries going account without issues. * issue 2 conditions, go ryuk check gotham logs message sample. * check error reason mentioned gotham * following error seen: ""no rate/prefix matching dst number: could find outgoing sms charge groupid= ****. error: record found (404)"", means say pricing updated particular sms group id/name * debug error, go sms configuration -> outbound sms group ryuk filter country customer facing issue with. check sms group name associated particular sms group id. * go to, outbound sms pricing, check country customer facing issue. check-in global pricing customer standard product plan, customer custom product plan, check product plan pricing tab. step performed check pricing associated sms group name. * check pricing updated sms group. not, reach concerned team. * also, mcc mnc need mapped outgoing sms group. check mapped sms group name, navigate _here_. mapped, reach concerned team. 3\. geo-permissions: * error code pretty simple straightforward. customer reports messages failing error code 450, means geo-permissions country account disabled time message triggered. * verify current status geo-permissions, use ryuk: https://ryuk-vue.ovilp.io/sms/sms-geo-permissions/home * disabled, ask customer enable sms geo-permissions country plivo console (https://console.plivo.com/sms/settings/fraud-shield/) order send messages. # miscellaneous delivery issue: 1\. sandbox issue: * type issue would fail api level. * customer free trial/developer account, mandatory sandbox destination number wishes send sms. * ryuk, under,_account settings_ would able check destination numbers customer sandboxed. * sandboxed destination number, need educate same. * link navigate sandbox numbers page: _https://console.plivo.com/phone-numbers/sandbox-numbers/_ * customer sandbox 5 numbers. cannot delete sandboxed numbers. 2\. us source number mapped 10dlc campaign. * type issue would fail api level. * would happen customer sending message us plivo us source number 10dlc linked. * check customer active 10dlc campaigns https://ryuk-vue.ovilp.io/sms/10dlc/campaigns/ * not, inform customer would need register 10dlc link us local number active campaign order send messages us. * does, ask customer link us local number appropriate campaign depending use case. # sample tickets: * https://plivo.zendesk.com/agent/tickets/19048 \- fake delivery & unknown error issue. * https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.",* https://plivo.zendesk.com/agent/tickets/22939 \- undelivered samples & sent samples. * https://plivo.zendesk.com/agent/tickets/22781 \- unknow error issue. * https://plivo.zendesk.com/agent/tickets/201420 \- sent state samples. * https://plivo.zendesk.com/agent/tickets/182075 \- invalid dst number. * https://plivo.zendesk.com/agent/tickets/78602 \- fake delivery. * https://plivo.zendesk.com/agent/tickets/128798 \- spam error.
